{"ast":null,"code":"/**\n * @license Angular v11.0.9\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nexport { ɵgetDOM } from '@angular/common';\nimport { ɵglobal, InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, setTestabilityGetter, ApplicationRef, NgZone, ɵgetDebugNodeR2, NgProbeToken, Optional, Injectable, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵConsole, NgModule, ɵɵdefineInjectable, ɵɵinject, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵgetSanitizationBypassType, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, INJECTOR, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, Sanitizer, createPlatformFactory, platformCore, ɵINJECTOR_SCOPE, RendererFactory2, Testability, ApplicationModule, SkipSelf, Version } from '@angular/core';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n  constructor() {\n    super();\n  }\n\n  supportsDOMEvents() {\n    return true;\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst ɵ0 = () => {\n  if (ɵglobal['Node']) {\n    return ɵglobal['Node'].prototype.contains || function (node) {\n      return !!(this.compareDocumentPosition(node) & 16);\n    };\n  }\n\n  return undefined;\n};\n\nconst nodeContains = ɵ0();\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n\n/* tslint:disable:requireParameterType no-console */\n\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n  static makeCurrent() {\n    ɵsetRootDomAdapter(new BrowserDomAdapter());\n  }\n\n  getProperty(el, name) {\n    return el[name];\n  }\n\n  log(error) {\n    if (window.console) {\n      window.console.log && window.console.log(error);\n    }\n  }\n\n  logGroup(error) {\n    if (window.console) {\n      window.console.group && window.console.group(error);\n    }\n  }\n\n  logGroupEnd() {\n    if (window.console) {\n      window.console.groupEnd && window.console.groupEnd();\n    }\n  }\n\n  onAndCancel(el, evt, listener) {\n    el.addEventListener(evt, listener, false); // Needed to follow Dart's subscription semantic, until fix of\n    // https://code.google.com/p/dart/issues/detail?id=17406\n\n    return () => {\n      el.removeEventListener(evt, listener, false);\n    };\n  }\n\n  dispatchEvent(el, evt) {\n    el.dispatchEvent(evt);\n  }\n\n  remove(node) {\n    if (node.parentNode) {\n      node.parentNode.removeChild(node);\n    }\n\n    return node;\n  }\n\n  getValue(el) {\n    return el.value;\n  }\n\n  createElement(tagName, doc) {\n    doc = doc || this.getDefaultDocument();\n    return doc.createElement(tagName);\n  }\n\n  createHtmlDocument() {\n    return document.implementation.createHTMLDocument('fakeTitle');\n  }\n\n  getDefaultDocument() {\n    return document;\n  }\n\n  isElementNode(node) {\n    return node.nodeType === Node.ELEMENT_NODE;\n  }\n\n  isShadowRoot(node) {\n    return node instanceof DocumentFragment;\n  }\n\n  getGlobalEventTarget(doc, target) {\n    if (target === 'window') {\n      return window;\n    }\n\n    if (target === 'document') {\n      return doc;\n    }\n\n    if (target === 'body') {\n      return doc.body;\n    }\n\n    return null;\n  }\n\n  getHistory() {\n    return window.history;\n  }\n\n  getLocation() {\n    return window.location;\n  }\n\n  getBaseHref(doc) {\n    const href = getBaseElementHref();\n    return href == null ? null : relativePath(href);\n  }\n\n  resetBaseElement() {\n    baseElement = null;\n  }\n\n  getUserAgent() {\n    return window.navigator.userAgent;\n  }\n\n  performanceNow() {\n    // performance.now() is not available in all browsers, see\n    // https://caniuse.com/high-resolution-time\n    return window.performance && window.performance.now ? window.performance.now() : new Date().getTime();\n  }\n\n  supportsCookies() {\n    return true;\n  }\n\n  getCookie(name) {\n    return ɵparseCookieValue(document.cookie, name);\n  }\n\n}\n\nlet baseElement = null;\n\nfunction getBaseElementHref() {\n  if (!baseElement) {\n    baseElement = document.querySelector('base');\n\n    if (!baseElement) {\n      return null;\n    }\n  }\n\n  return baseElement.getAttribute('href');\n} // based on urlUtils.js in AngularJS 1\n\n\nlet urlParsingNode;\n\nfunction relativePath(url) {\n  if (!urlParsingNode) {\n    urlParsingNode = document.createElement('a');\n  }\n\n  urlParsingNode.setAttribute('href', url);\n  return urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\n\n\nconst TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n\nfunction appInitializerFactory(transitionId, document, injector) {\n  return () => {\n    // Wait for all application initializers to be completed before removing the styles set by\n    // the server.\n    injector.get(ApplicationInitStatus).donePromise.then(() => {\n      const dom = ɵgetDOM();\n      const styles = Array.prototype.slice.apply(document.querySelectorAll(`style[ng-transition]`));\n      styles.filter(el => el.getAttribute('ng-transition') === transitionId).forEach(el => dom.remove(el));\n    });\n  };\n}\n\nconst SERVER_TRANSITION_PROVIDERS = [{\n  provide: APP_INITIALIZER,\n  useFactory: appInitializerFactory,\n  deps: [TRANSITION_ID, DOCUMENT, Injector],\n  multi: true\n}];\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nclass BrowserGetTestability {\n  static init() {\n    setTestabilityGetter(new BrowserGetTestability());\n  }\n\n  addToWindow(registry) {\n    ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n      const testability = registry.findTestabilityInTree(elem, findInAncestors);\n\n      if (testability == null) {\n        throw new Error('Could not find testability for element.');\n      }\n\n      return testability;\n    };\n\n    ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n\n    ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n\n    const whenAllStable = (callback\n    /** TODO #9100 */\n    ) => {\n      const testabilities = ɵglobal['getAllAngularTestabilities']();\n      let count = testabilities.length;\n      let didWork = false;\n\n      const decrement = function (didWork_\n      /** TODO #9100 */\n      ) {\n        didWork = didWork || didWork_;\n        count--;\n\n        if (count == 0) {\n          callback(didWork);\n        }\n      };\n\n      testabilities.forEach(function (testability\n      /** TODO #9100 */\n      ) {\n        testability.whenStable(decrement);\n      });\n    };\n\n    if (!ɵglobal['frameworkStabilizers']) {\n      ɵglobal['frameworkStabilizers'] = [];\n    }\n\n    ɵglobal['frameworkStabilizers'].push(whenAllStable);\n  }\n\n  findTestabilityInTree(registry, elem, findInAncestors) {\n    if (elem == null) {\n      return null;\n    }\n\n    const t = registry.getTestability(elem);\n\n    if (t != null) {\n      return t;\n    } else if (!findInAncestors) {\n      return null;\n    }\n\n    if (ɵgetDOM().isShadowRoot(elem)) {\n      return this.findTestabilityInTree(registry, elem.host, true);\n    }\n\n    return this.findTestabilityInTree(registry, elem.parentElement, true);\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\n\nfunction camelCaseToDashCase(input) {\n  return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\n\nfunction dashCaseToCamelCase(input) {\n  return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\n\n\nfunction exportNgVar(name, value) {\n  if (typeof COMPILED === 'undefined' || !COMPILED) {\n    // Note: we can't export `ng` when using closure enhanced optimization as:\n    // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n    // - we can't declare a closure extern as the namespace `ng` is already used within Google\n    //   for typings for angularJS (via `goog.provide('ng....')`).\n    const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n    ng[name] = value;\n  }\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst ɵ0$1 = () => ({\n  'ApplicationRef': ApplicationRef,\n  'NgZone': NgZone\n});\n\nconst CORE_TOKENS = ɵ0$1();\nconst INSPECT_GLOBAL_NAME = 'probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\n\nfunction inspectNativeElementR2(element) {\n  return ɵgetDebugNodeR2(element);\n}\n\nfunction _createNgProbeR2(coreTokens) {\n  exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElementR2);\n  exportNgVar(CORE_TOKENS_GLOBAL_NAME, Object.assign(Object.assign({}, CORE_TOKENS), _ngProbeTokensToMap(coreTokens || [])));\n  return () => inspectNativeElementR2;\n}\n\nfunction _ngProbeTokensToMap(tokens) {\n  return tokens.reduce((prev, t) => (prev[t.name] = t.token, prev), {});\n}\n/**\n * In Ivy, we don't support NgProbe because we have our own set of testing utilities\n * with more robust functionality.\n *\n * We shouldn't bring in NgProbe because it prevents DebugNode and friends from\n * tree-shaking properly.\n */\n\n\nconst ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\n\nconst ELEMENT_PROBE_PROVIDERS__PRE_R3__ = [{\n  provide: APP_INITIALIZER,\n  useFactory: _createNgProbeR2,\n  deps: [[NgProbeToken, new Optional()]],\n  multi: true\n}];\nconst ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__PRE_R3__;\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\n\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\n\nclass EventManager {\n  /**\n   * Initializes an instance of the event-manager service.\n   */\n  constructor(plugins, _zone) {\n    this._zone = _zone;\n    this._eventNameToPlugin = new Map();\n    plugins.forEach(p => p.manager = this);\n    this._plugins = plugins.slice().reverse();\n  }\n  /**\n   * Registers a handler for a specific element and event.\n   *\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns  A callback function that can be used to remove the handler.\n   */\n\n\n  addEventListener(element, eventName, handler) {\n    const plugin = this._findPluginFor(eventName);\n\n    return plugin.addEventListener(element, eventName, handler);\n  }\n  /**\n   * Registers a global handler for an event in a target view.\n   *\n   * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n   * @param eventName The name of the event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns A callback function that can be used to remove the handler.\n   */\n\n\n  addGlobalEventListener(target, eventName, handler) {\n    const plugin = this._findPluginFor(eventName);\n\n    return plugin.addGlobalEventListener(target, eventName, handler);\n  }\n  /**\n   * Retrieves the compilation zone in which event listeners are registered.\n   */\n\n\n  getZone() {\n    return this._zone;\n  }\n  /** @internal */\n\n\n  _findPluginFor(eventName) {\n    const plugin = this._eventNameToPlugin.get(eventName);\n\n    if (plugin) {\n      return plugin;\n    }\n\n    const plugins = this._plugins;\n\n    for (let i = 0; i < plugins.length; i++) {\n      const plugin = plugins[i];\n\n      if (plugin.supports(eventName)) {\n        this._eventNameToPlugin.set(eventName, plugin);\n\n        return plugin;\n      }\n    }\n\n    throw new Error(`No event manager plugin found for event ${eventName}`);\n  }\n\n}\n\nEventManager.ɵfac = function EventManager_Factory(t) {\n  return new (t || EventManager)(ɵngcc0.ɵɵinject(EVENT_MANAGER_PLUGINS), ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n};\n\nEventManager.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: EventManager,\n  factory: EventManager.ɵfac\n});\n\nEventManager.ctorParameters = () => [{\n  type: Array,\n  decorators: [{\n    type: Inject,\n    args: [EVENT_MANAGER_PLUGINS]\n  }]\n}, {\n  type: NgZone\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EventManager, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: Array,\n      decorators: [{\n        type: Inject,\n        args: [EVENT_MANAGER_PLUGINS]\n      }]\n    }, {\n      type: ɵngcc0.NgZone\n    }];\n  }, null);\n})();\n\nclass EventManagerPlugin {\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n\n  addGlobalEventListener(element, eventName, handler) {\n    const target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n\n    if (!target) {\n      throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n    }\n\n    return this.addEventListener(target, eventName, handler);\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass SharedStylesHost {\n  constructor() {\n    /** @internal */\n    this._stylesSet = new Set();\n  }\n\n  addStyles(styles) {\n    const additions = new Set();\n    styles.forEach(style => {\n      if (!this._stylesSet.has(style)) {\n        this._stylesSet.add(style);\n\n        additions.add(style);\n      }\n    });\n    this.onStylesAdded(additions);\n  }\n\n  onStylesAdded(additions) {}\n\n  getAllStyles() {\n    return Array.from(this._stylesSet);\n  }\n\n}\n\nSharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) {\n  return new (t || SharedStylesHost)();\n};\n\nSharedStylesHost.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: SharedStylesHost,\n  factory: SharedStylesHost.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass DomSharedStylesHost extends SharedStylesHost {\n  constructor(_doc) {\n    super();\n    this._doc = _doc;\n    this._hostNodes = new Set();\n    this._styleNodes = new Set();\n\n    this._hostNodes.add(_doc.head);\n  }\n\n  _addStylesToHost(styles, host) {\n    styles.forEach(style => {\n      const styleEl = this._doc.createElement('style');\n\n      styleEl.textContent = style;\n\n      this._styleNodes.add(host.appendChild(styleEl));\n    });\n  }\n\n  addHost(hostNode) {\n    this._addStylesToHost(this._stylesSet, hostNode);\n\n    this._hostNodes.add(hostNode);\n  }\n\n  removeHost(hostNode) {\n    this._hostNodes.delete(hostNode);\n  }\n\n  onStylesAdded(additions) {\n    this._hostNodes.forEach(hostNode => this._addStylesToHost(additions, hostNode));\n  }\n\n  ngOnDestroy() {\n    this._styleNodes.forEach(styleNode => ɵgetDOM().remove(styleNode));\n  }\n\n}\n\nDomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) {\n  return new (t || DomSharedStylesHost)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nDomSharedStylesHost.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DomSharedStylesHost,\n  factory: DomSharedStylesHost.ɵfac\n});\n\nDomSharedStylesHost.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSharedStylesHost, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst NAMESPACE_URIS = {\n  'svg': 'http://www.w3.org/2000/svg',\n  'xhtml': 'http://www.w3.org/1999/xhtml',\n  'xlink': 'http://www.w3.org/1999/xlink',\n  'xml': 'http://www.w3.org/XML/1998/namespace',\n  'xmlns': 'http://www.w3.org/2000/xmlns/'\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n\nfunction shimContentAttribute(componentShortId) {\n  return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nfunction shimHostAttribute(componentShortId) {\n  return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n\nfunction flattenStyles(compId, styles, target) {\n  for (let i = 0; i < styles.length; i++) {\n    let style = styles[i];\n\n    if (Array.isArray(style)) {\n      flattenStyles(compId, style, target);\n    } else {\n      style = style.replace(COMPONENT_REGEX, compId);\n      target.push(style);\n    }\n  }\n\n  return target;\n}\n\nfunction decoratePreventDefault(eventHandler) {\n  // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n  // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n  // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n  // the listener (see below).\n  return event => {\n    // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n    // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n    // can inspect the listener toString contents for the existence of this special token. Because\n    // the token is a string literal, it is ensured to not be modified by compiled code.\n    if (event === '__ngUnwrap__') {\n      return eventHandler;\n    }\n\n    const allowDefaultBehavior = eventHandler(event);\n\n    if (allowDefaultBehavior === false) {\n      // TODO(tbosch): move preventDefault into event plugins...\n      event.preventDefault();\n      event.returnValue = false;\n    }\n\n    return undefined;\n  };\n}\n\nlet hasLoggedNativeEncapsulationWarning = false;\n\nclass DomRendererFactory2 {\n  constructor(eventManager, sharedStylesHost, appId) {\n    this.eventManager = eventManager;\n    this.sharedStylesHost = sharedStylesHost;\n    this.appId = appId;\n    this.rendererByCompId = new Map();\n    this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n  }\n\n  createRenderer(element, type) {\n    if (!element || !type) {\n      return this.defaultRenderer;\n    }\n\n    switch (type.encapsulation) {\n      case ViewEncapsulation.Emulated:\n        {\n          let renderer = this.rendererByCompId.get(type.id);\n\n          if (!renderer) {\n            renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n            this.rendererByCompId.set(type.id, renderer);\n          }\n\n          renderer.applyToHost(element);\n          return renderer;\n        }\n\n      case 1:\n      case ViewEncapsulation.ShadowDom:\n        // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n          hasLoggedNativeEncapsulationWarning = true;\n          console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n        }\n\n        return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n\n      default:\n        {\n          if (!this.rendererByCompId.has(type.id)) {\n            const styles = flattenStyles(type.id, type.styles, []);\n            this.sharedStylesHost.addStyles(styles);\n            this.rendererByCompId.set(type.id, this.defaultRenderer);\n          }\n\n          return this.defaultRenderer;\n        }\n    }\n  }\n\n  begin() {}\n\n  end() {}\n\n}\n\nDomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) {\n  return new (t || DomRendererFactory2)(ɵngcc0.ɵɵinject(EventManager), ɵngcc0.ɵɵinject(DomSharedStylesHost), ɵngcc0.ɵɵinject(APP_ID));\n};\n\nDomRendererFactory2.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DomRendererFactory2,\n  factory: DomRendererFactory2.ɵfac\n});\n\nDomRendererFactory2.ctorParameters = () => [{\n  type: EventManager\n}, {\n  type: DomSharedStylesHost\n}, {\n  type: String,\n  decorators: [{\n    type: Inject,\n    args: [APP_ID]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomRendererFactory2, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: EventManager\n    }, {\n      type: DomSharedStylesHost\n    }, {\n      type: String,\n      decorators: [{\n        type: Inject,\n        args: [APP_ID]\n      }]\n    }];\n  }, null);\n})();\n\nclass DefaultDomRenderer2 {\n  constructor(eventManager) {\n    this.eventManager = eventManager;\n    this.data = Object.create(null);\n  }\n\n  destroy() {}\n\n  createElement(name, namespace) {\n    if (namespace) {\n      // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n      // will result in undefined, so we just return the namespace here.\n      return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n    }\n\n    return document.createElement(name);\n  }\n\n  createComment(value) {\n    return document.createComment(value);\n  }\n\n  createText(value) {\n    return document.createTextNode(value);\n  }\n\n  appendChild(parent, newChild) {\n    parent.appendChild(newChild);\n  }\n\n  insertBefore(parent, newChild, refChild) {\n    if (parent) {\n      parent.insertBefore(newChild, refChild);\n    }\n  }\n\n  removeChild(parent, oldChild) {\n    if (parent) {\n      parent.removeChild(oldChild);\n    }\n  }\n\n  selectRootElement(selectorOrNode, preserveContent) {\n    let el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) : selectorOrNode;\n\n    if (!el) {\n      throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n    }\n\n    if (!preserveContent) {\n      el.textContent = '';\n    }\n\n    return el;\n  }\n\n  parentNode(node) {\n    return node.parentNode;\n  }\n\n  nextSibling(node) {\n    return node.nextSibling;\n  }\n\n  setAttribute(el, name, value, namespace) {\n    if (namespace) {\n      name = namespace + ':' + name; // TODO(FW-811): Ivy may cause issues here because it's passing around\n      // full URIs for namespaces, therefore this lookup will fail.\n\n      const namespaceUri = NAMESPACE_URIS[namespace];\n\n      if (namespaceUri) {\n        el.setAttributeNS(namespaceUri, name, value);\n      } else {\n        el.setAttribute(name, value);\n      }\n    } else {\n      el.setAttribute(name, value);\n    }\n  }\n\n  removeAttribute(el, name, namespace) {\n    if (namespace) {\n      // TODO(FW-811): Ivy may cause issues here because it's passing around\n      // full URIs for namespaces, therefore this lookup will fail.\n      const namespaceUri = NAMESPACE_URIS[namespace];\n\n      if (namespaceUri) {\n        el.removeAttributeNS(namespaceUri, name);\n      } else {\n        // TODO(FW-811): Since ivy is passing around full URIs for namespaces\n        // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n        // which is wrong.\n        el.removeAttribute(`${namespace}:${name}`);\n      }\n    } else {\n      el.removeAttribute(name);\n    }\n  }\n\n  addClass(el, name) {\n    el.classList.add(name);\n  }\n\n  removeClass(el, name) {\n    el.classList.remove(name);\n  }\n\n  setStyle(el, style, value, flags) {\n    if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n      el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n    } else {\n      el.style[style] = value;\n    }\n  }\n\n  removeStyle(el, style, flags) {\n    if (flags & RendererStyleFlags2.DashCase) {\n      el.style.removeProperty(style);\n    } else {\n      // IE requires '' instead of null\n      // see https://github.com/angular/angular/issues/7916\n      el.style[style] = '';\n    }\n  }\n\n  setProperty(el, name, value) {\n    NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n    el[name] = value;\n  }\n\n  setValue(node, value) {\n    node.nodeValue = value;\n  }\n\n  listen(target, event, callback) {\n    NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n\n    if (typeof target === 'string') {\n      return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n    }\n\n    return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n  }\n\n}\n\nconst ɵ0$2 = () => '@'.charCodeAt(0);\n\nconst AT_CHARCODE = ɵ0$2();\n\nfunction checkNoSyntheticProp(name, nameKind) {\n  if (name.charCodeAt(0) === AT_CHARCODE) {\n    throw new Error(`Found the synthetic ${nameKind} ${name}. Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.`);\n  }\n}\n\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n  constructor(eventManager, sharedStylesHost, component, appId) {\n    super(eventManager);\n    this.component = component;\n    const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n    sharedStylesHost.addStyles(styles);\n    this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n    this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n  }\n\n  applyToHost(element) {\n    super.setAttribute(element, this.hostAttr, '');\n  }\n\n  createElement(parent, name) {\n    const el = super.createElement(parent, name);\n    super.setAttribute(el, this.contentAttr, '');\n    return el;\n  }\n\n}\n\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n  constructor(eventManager, sharedStylesHost, hostEl, component) {\n    super(eventManager);\n    this.sharedStylesHost = sharedStylesHost;\n    this.hostEl = hostEl;\n    this.shadowRoot = hostEl.attachShadow({\n      mode: 'open'\n    });\n    this.sharedStylesHost.addHost(this.shadowRoot);\n    const styles = flattenStyles(component.id, component.styles, []);\n\n    for (let i = 0; i < styles.length; i++) {\n      const styleEl = document.createElement('style');\n      styleEl.textContent = styles[i];\n      this.shadowRoot.appendChild(styleEl);\n    }\n  }\n\n  nodeOrShadowRoot(node) {\n    return node === this.hostEl ? this.shadowRoot : node;\n  }\n\n  destroy() {\n    this.sharedStylesHost.removeHost(this.shadowRoot);\n  }\n\n  appendChild(parent, newChild) {\n    return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n  }\n\n  insertBefore(parent, newChild, refChild) {\n    return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n  }\n\n  removeChild(parent, oldChild) {\n    return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n  }\n\n  parentNode(node) {\n    return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nclass DomEventsPlugin extends EventManagerPlugin {\n  constructor(doc) {\n    super(doc);\n  } // This plugin should come last in the list of plugins, because it accepts all\n  // events.\n\n\n  supports(eventName) {\n    return true;\n  }\n\n  addEventListener(element, eventName, handler) {\n    element.addEventListener(eventName, handler, false);\n    return () => this.removeEventListener(element, eventName, handler);\n  }\n\n  removeEventListener(target, eventName, callback) {\n    return target.removeEventListener(eventName, callback);\n  }\n\n}\n\nDomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) {\n  return new (t || DomEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nDomEventsPlugin.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: DomEventsPlugin,\n  factory: DomEventsPlugin.ɵfac\n});\n\nDomEventsPlugin.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Supported HammerJS recognizer event names.\n */\n\n\nconst EVENT_NAMES = {\n  // pan\n  'pan': true,\n  'panstart': true,\n  'panmove': true,\n  'panend': true,\n  'pancancel': true,\n  'panleft': true,\n  'panright': true,\n  'panup': true,\n  'pandown': true,\n  // pinch\n  'pinch': true,\n  'pinchstart': true,\n  'pinchmove': true,\n  'pinchend': true,\n  'pinchcancel': true,\n  'pinchin': true,\n  'pinchout': true,\n  // press\n  'press': true,\n  'pressup': true,\n  // rotate\n  'rotate': true,\n  'rotatestart': true,\n  'rotatemove': true,\n  'rotateend': true,\n  'rotatecancel': true,\n  // swipe\n  'swipe': true,\n  'swipeleft': true,\n  'swiperight': true,\n  'swipeup': true,\n  'swipedown': true,\n  // tap\n  'tap': true\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\n\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\n\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\n\nclass HammerGestureConfig {\n  constructor() {\n    /**\n     * A set of supported event names for gestures to be used in Angular.\n     * Angular supports all built-in recognizers, as listed in\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     */\n    this.events = [];\n    /**\n     * Maps gesture event names to a set of configuration options\n     * that specify overrides to the default values for specific properties.\n     *\n     * The key is a supported event name to be configured,\n     * and the options object contains a set of properties, with override values\n     * to be applied to the named recognizer event.\n     * For example, to disable recognition of the rotate event, specify\n     *  `{\"rotate\": {\"enable\": false}}`.\n     *\n     * Properties that are not present take the HammerJS default values.\n     * For information about which properties are supported for which events,\n     * and their allowed and default values, see\n     * [HammerJS documentation](https://hammerjs.github.io/).\n     *\n     */\n\n    this.overrides = {};\n  }\n  /**\n   * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n   * and attaches it to a given HTML element.\n   * @param element The element that will recognize gestures.\n   * @returns A HammerJS event-manager object.\n   */\n\n\n  buildHammer(element) {\n    const mc = new Hammer(element, this.options);\n    mc.get('pinch').set({\n      enable: true\n    });\n    mc.get('rotate').set({\n      enable: true\n    });\n\n    for (const eventName in this.overrides) {\n      mc.get(eventName).set(this.overrides[eventName]);\n    }\n\n    return mc;\n  }\n\n}\n\nHammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) {\n  return new (t || HammerGestureConfig)();\n};\n\nHammerGestureConfig.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: HammerGestureConfig,\n  factory: HammerGestureConfig.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGestureConfig, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\n\n\nclass HammerGesturesPlugin extends EventManagerPlugin {\n  constructor(doc, _config, console, loader) {\n    super(doc);\n    this._config = _config;\n    this.console = console;\n    this.loader = loader;\n  }\n\n  supports(eventName) {\n    if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n      return false;\n    }\n\n    if (!window.Hammer && !this.loader) {\n      this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` + `loaded and no custom loader has been specified.`);\n      return false;\n    }\n\n    return true;\n  }\n\n  addEventListener(element, eventName, handler) {\n    const zone = this.manager.getZone();\n    eventName = eventName.toLowerCase(); // If Hammer is not present but a loader is specified, we defer adding the event listener\n    // until Hammer is loaded.\n\n    if (!window.Hammer && this.loader) {\n      // This `addEventListener` method returns a function to remove the added listener.\n      // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n      // than remove anything.\n      let cancelRegistration = false;\n\n      let deregister = () => {\n        cancelRegistration = true;\n      };\n\n      this.loader().then(() => {\n        // If Hammer isn't actually loaded when the custom loader resolves, give up.\n        if (!window.Hammer) {\n          this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n\n          deregister = () => {};\n\n          return;\n        }\n\n        if (!cancelRegistration) {\n          // Now that Hammer is loaded and the listener is being loaded for real,\n          // the deregistration function changes from canceling registration to removal.\n          deregister = this.addEventListener(element, eventName, handler);\n        }\n      }).catch(() => {\n        this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` + `Hammer.JS loader failed.`);\n\n        deregister = () => {};\n      }); // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n      // can change the behavior of `deregister` once the listener is added. Using a closure in\n      // this way allows us to avoid any additional data structures to track listener removal.\n\n      return () => {\n        deregister();\n      };\n    }\n\n    return zone.runOutsideAngular(() => {\n      // Creating the manager bind events, must be done outside of angular\n      const mc = this._config.buildHammer(element);\n\n      const callback = function (eventObj) {\n        zone.runGuarded(function () {\n          handler(eventObj);\n        });\n      };\n\n      mc.on(eventName, callback);\n      return () => {\n        mc.off(eventName, callback); // destroy mc to prevent memory leak\n\n        if (typeof mc.destroy === 'function') {\n          mc.destroy();\n        }\n      };\n    });\n  }\n\n  isCustomEvent(eventName) {\n    return this._config.events.indexOf(eventName) > -1;\n  }\n\n}\n\nHammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) {\n  return new (t || HammerGesturesPlugin)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(HAMMER_GESTURE_CONFIG), ɵngcc0.ɵɵinject(ɵngcc0.ɵConsole), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8));\n};\n\nHammerGesturesPlugin.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: HammerGesturesPlugin,\n  factory: HammerGesturesPlugin.ɵfac\n});\n\nHammerGesturesPlugin.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: HammerGestureConfig,\n  decorators: [{\n    type: Inject,\n    args: [HAMMER_GESTURE_CONFIG]\n  }]\n}, {\n  type: ɵConsole\n}, {\n  type: undefined,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [HAMMER_LOADER]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: HammerGestureConfig,\n      decorators: [{\n        type: Inject,\n        args: [HAMMER_GESTURE_CONFIG]\n      }]\n    }, {\n      type: ɵngcc0.ɵConsole\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [HAMMER_LOADER]\n      }]\n    }];\n  }, null);\n})();\n/**\n * In Ivy, support for Hammer gestures is optional, so applications must\n * import the `HammerModule` at root to turn on support. This means that\n * Hammer-specific code can be tree-shaken away if not needed.\n */\n\n\nconst HAMMER_PROVIDERS__POST_R3__ = [];\n/**\n * In View Engine, support for Hammer gestures is built-in by default.\n */\n\nconst HAMMER_PROVIDERS__PRE_R3__ = [{\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: HammerGesturesPlugin,\n  multi: true,\n  deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n}, {\n  provide: HAMMER_GESTURE_CONFIG,\n  useClass: HammerGestureConfig,\n  deps: []\n}];\nconst HAMMER_PROVIDERS = HAMMER_PROVIDERS__PRE_R3__;\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\n\nclass HammerModule {}\n\nHammerModule.ɵfac = function HammerModule_Factory(t) {\n  return new (t || HammerModule)();\n};\n\nHammerModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: HammerModule\n});\nHammerModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: HAMMER_PROVIDERS__PRE_R3__\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerModule, [{\n    type: NgModule,\n    args: [{\n      providers: HAMMER_PROVIDERS__PRE_R3__\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Defines supported modifiers for key events.\n */\n\n\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nconst DOM_KEY_LOCATION_NUMPAD = 3; // Map to convert some key or keyIdentifier values to what will be returned by getEventKey\n\nconst _keyMap = {\n  // The following values are here for cross-browser compatibility and to match the W3C standard\n  // cf https://www.w3.org/TR/DOM-Level-3-Events-key/\n  '\\b': 'Backspace',\n  '\\t': 'Tab',\n  '\\x7F': 'Delete',\n  '\\x1B': 'Escape',\n  'Del': 'Delete',\n  'Esc': 'Escape',\n  'Left': 'ArrowLeft',\n  'Right': 'ArrowRight',\n  'Up': 'ArrowUp',\n  'Down': 'ArrowDown',\n  'Menu': 'ContextMenu',\n  'Scroll': 'ScrollLock',\n  'Win': 'OS'\n}; // There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\n\nconst _chromeNumKeyPadMap = {\n  'A': '1',\n  'B': '2',\n  'C': '3',\n  'D': '4',\n  'E': '5',\n  'F': '6',\n  'G': '7',\n  'H': '8',\n  'I': '9',\n  'J': '*',\n  'K': '+',\n  'M': '-',\n  'N': '.',\n  'O': '/',\n  '\\x60': '0',\n  '\\x90': 'NumLock'\n};\n\nconst ɵ0$3 = event => event.altKey,\n      ɵ1 = event => event.ctrlKey,\n      ɵ2 = event => event.metaKey,\n      ɵ3 = event => event.shiftKey;\n/**\n * Retrieves modifiers from key-event objects.\n */\n\n\nconst MODIFIER_KEY_GETTERS = {\n  'alt': ɵ0$3,\n  'control': ɵ1,\n  'meta': ɵ2,\n  'shift': ɵ3\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\n\nclass KeyEventsPlugin extends EventManagerPlugin {\n  /**\n   * Initializes an instance of the browser plug-in.\n   * @param doc The document in which key events will be detected.\n   */\n  constructor(doc) {\n    super(doc);\n  }\n  /**\n   * Reports whether a named key event is supported.\n   * @param eventName The event name to query.\n   * @return True if the named key event is supported.\n   */\n\n\n  supports(eventName) {\n    return KeyEventsPlugin.parseEventName(eventName) != null;\n  }\n  /**\n   * Registers a handler for a specific element and key event.\n   * @param element The HTML element to receive event notifications.\n   * @param eventName The name of the key event to listen for.\n   * @param handler A function to call when the notification occurs. Receives the\n   * event object as an argument.\n   * @returns The key event that was registered.\n   */\n\n\n  addEventListener(element, eventName, handler) {\n    const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n    const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n    return this.manager.getZone().runOutsideAngular(() => {\n      return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n    });\n  }\n\n  static parseEventName(eventName) {\n    const parts = eventName.toLowerCase().split('.');\n    const domEventName = parts.shift();\n\n    if (parts.length === 0 || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n      return null;\n    }\n\n    const key = KeyEventsPlugin._normalizeKey(parts.pop());\n\n    let fullKey = '';\n    MODIFIER_KEYS.forEach(modifierName => {\n      const index = parts.indexOf(modifierName);\n\n      if (index > -1) {\n        parts.splice(index, 1);\n        fullKey += modifierName + '.';\n      }\n    });\n    fullKey += key;\n\n    if (parts.length != 0 || key.length === 0) {\n      // returning null instead of throwing to let another plugin process the event\n      return null;\n    } // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n    //       The code must remain in the `result['domEventName']` form.\n    // return {domEventName, fullKey};\n\n\n    const result = {};\n    result['domEventName'] = domEventName;\n    result['fullKey'] = fullKey;\n    return result;\n  }\n\n  static getEventFullKey(event) {\n    let fullKey = '';\n    let key = getEventKey(event);\n    key = key.toLowerCase();\n\n    if (key === ' ') {\n      key = 'space'; // for readability\n    } else if (key === '.') {\n      key = 'dot'; // because '.' is used as a separator in event names\n    }\n\n    MODIFIER_KEYS.forEach(modifierName => {\n      if (modifierName != key) {\n        const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n\n        if (modifierGetter(event)) {\n          fullKey += modifierName + '.';\n        }\n      }\n    });\n    fullKey += key;\n    return fullKey;\n  }\n  /**\n   * Configures a handler callback for a key event.\n   * @param fullKey The event name that combines all simultaneous keystrokes.\n   * @param handler The function that responds to the key event.\n   * @param zone The zone in which the event occurred.\n   * @returns A callback function.\n   */\n\n\n  static eventCallback(fullKey, handler, zone) {\n    return (event\n    /** TODO #9100 */\n    ) => {\n      if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n        zone.runGuarded(() => handler(event));\n      }\n    };\n  }\n  /** @internal */\n\n\n  static _normalizeKey(keyName) {\n    // TODO: switch to a Map if the mapping grows too much\n    switch (keyName) {\n      case 'esc':\n        return 'escape';\n\n      default:\n        return keyName;\n    }\n  }\n\n}\n\nKeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) {\n  return new (t || KeyEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nKeyEventsPlugin.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: KeyEventsPlugin,\n  factory: KeyEventsPlugin.ɵfac\n});\n\nKeyEventsPlugin.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyEventsPlugin, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nfunction getEventKey(event) {\n  let key = event.key;\n\n  if (key == null) {\n    key = event.keyIdentifier; // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n    // Safari cf\n    // https://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n\n    if (key == null) {\n      return 'Unidentified';\n    }\n\n    if (key.startsWith('U+')) {\n      key = String.fromCharCode(parseInt(key.substring(2), 16));\n\n      if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n        // There is a bug in Chrome for numeric keypad keys:\n        // https://code.google.com/p/chromium/issues/detail?id=155654\n        // 1, 2, 3 ... are reported as A, B, C ...\n        key = _chromeNumKeyPadMap[key];\n      }\n    }\n  }\n\n  return _keyMap[key] || key;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\n\n\nclass DomSanitizer {}\n\nDomSanitizer.ɵfac = function DomSanitizer_Factory(t) {\n  return new (t || DomSanitizer)();\n};\n\nDomSanitizer.ɵprov = ɵɵdefineInjectable({\n  factory: function DomSanitizer_Factory() {\n    return ɵɵinject(DomSanitizerImpl);\n  },\n  token: DomSanitizer,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizer, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: forwardRef(() => DomSanitizerImpl)\n    }]\n  }], null, null);\n})();\n\nfunction domSanitizerImplFactory(injector) {\n  return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\n\nclass DomSanitizerImpl extends DomSanitizer {\n  constructor(_doc) {\n    super();\n    this._doc = _doc;\n  }\n\n  sanitize(ctx, value) {\n    if (value == null) return null;\n\n    switch (ctx) {\n      case SecurityContext.NONE:\n        return value;\n\n      case SecurityContext.HTML:\n        if (ɵallowSanitizationBypassAndThrow(value, \"HTML\"\n        /* Html */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        return ɵ_sanitizeHtml(this._doc, String(value));\n\n      case SecurityContext.STYLE:\n        if (ɵallowSanitizationBypassAndThrow(value, \"Style\"\n        /* Style */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        return value;\n\n      case SecurityContext.SCRIPT:\n        if (ɵallowSanitizationBypassAndThrow(value, \"Script\"\n        /* Script */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        throw new Error('unsafe value used in a script context');\n\n      case SecurityContext.URL:\n        const type = ɵgetSanitizationBypassType(value);\n\n        if (ɵallowSanitizationBypassAndThrow(value, \"URL\"\n        /* Url */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        return ɵ_sanitizeUrl(String(value));\n\n      case SecurityContext.RESOURCE_URL:\n        if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\"\n        /* ResourceUrl */\n        )) {\n          return ɵunwrapSafeValue(value);\n        }\n\n        throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n\n      default:\n        throw new Error(`Unexpected SecurityContext ${ctx} (see https://g.co/ng/security#xss)`);\n    }\n  }\n\n  bypassSecurityTrustHtml(value) {\n    return ɵbypassSanitizationTrustHtml(value);\n  }\n\n  bypassSecurityTrustStyle(value) {\n    return ɵbypassSanitizationTrustStyle(value);\n  }\n\n  bypassSecurityTrustScript(value) {\n    return ɵbypassSanitizationTrustScript(value);\n  }\n\n  bypassSecurityTrustUrl(value) {\n    return ɵbypassSanitizationTrustUrl(value);\n  }\n\n  bypassSecurityTrustResourceUrl(value) {\n    return ɵbypassSanitizationTrustResourceUrl(value);\n  }\n\n}\n\nDomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) {\n  return new (t || DomSanitizerImpl)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nDomSanitizerImpl.ɵprov = ɵɵdefineInjectable({\n  factory: function DomSanitizerImpl_Factory() {\n    return domSanitizerImplFactory(ɵɵinject(INJECTOR));\n  },\n  token: DomSanitizerImpl,\n  providedIn: \"root\"\n});\n\nDomSanitizerImpl.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizerImpl, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: domSanitizerImplFactory,\n      deps: [Injector]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  BrowserGetTestability.init();\n}\n\nfunction errorHandler() {\n  return new ErrorHandler();\n}\n\nfunction _document() {\n  // Tell ivy about the global document\n  ɵsetDocument(document);\n  return document;\n}\n\nconst ɵ0$4 = ɵPLATFORM_BROWSER_ID;\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [{\n  provide: PLATFORM_ID,\n  useValue: ɵ0$4\n}, {\n  provide: PLATFORM_INITIALIZER,\n  useValue: initDomAdapter,\n  multi: true\n}, {\n  provide: DOCUMENT,\n  useFactory: _document,\n  deps: []\n}];\nconst BROWSER_SANITIZATION_PROVIDERS__PRE_R3__ = [{\n  provide: Sanitizer,\n  useExisting: DomSanitizer\n}, {\n  provide: DomSanitizer,\n  useClass: DomSanitizerImpl,\n  deps: [DOCUMENT]\n}];\nconst BROWSER_SANITIZATION_PROVIDERS__POST_R3__ = [];\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](https://g.co/ng/security).\n * @publicApi\n */\n\nconst BROWSER_SANITIZATION_PROVIDERS = BROWSER_SANITIZATION_PROVIDERS__PRE_R3__;\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\n\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\nconst BROWSER_MODULE_PROVIDERS = [BROWSER_SANITIZATION_PROVIDERS, {\n  provide: ɵINJECTOR_SCOPE,\n  useValue: 'root'\n}, {\n  provide: ErrorHandler,\n  useFactory: errorHandler,\n  deps: []\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: DomEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT, NgZone, PLATFORM_ID]\n}, {\n  provide: EVENT_MANAGER_PLUGINS,\n  useClass: KeyEventsPlugin,\n  multi: true,\n  deps: [DOCUMENT]\n}, HAMMER_PROVIDERS, {\n  provide: DomRendererFactory2,\n  useClass: DomRendererFactory2,\n  deps: [EventManager, DomSharedStylesHost, APP_ID]\n}, {\n  provide: RendererFactory2,\n  useExisting: DomRendererFactory2\n}, {\n  provide: SharedStylesHost,\n  useExisting: DomSharedStylesHost\n}, {\n  provide: DomSharedStylesHost,\n  useClass: DomSharedStylesHost,\n  deps: [DOCUMENT]\n}, {\n  provide: Testability,\n  useClass: Testability,\n  deps: [NgZone]\n}, {\n  provide: EventManager,\n  useClass: EventManager,\n  deps: [EVENT_MANAGER_PLUGINS, NgZone]\n}, ELEMENT_PROBE_PROVIDERS];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\n\nclass BrowserModule {\n  constructor(parentModule) {\n    if (parentModule) {\n      throw new Error(`BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n    }\n  }\n  /**\n   * Configures a browser-based app to transition from a server-rendered app, if\n   * one is present on the page.\n   *\n   * @param params An object containing an identifier for the app to transition.\n   * The ID must match between the client and server versions of the app.\n   * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n   */\n\n\n  static withServerTransition(params) {\n    return {\n      ngModule: BrowserModule,\n      providers: [{\n        provide: APP_ID,\n        useValue: params.appId\n      }, {\n        provide: TRANSITION_ID,\n        useExisting: APP_ID\n      }, SERVER_TRANSITION_PROVIDERS]\n    };\n  }\n\n}\n\nBrowserModule.ɵfac = function BrowserModule_Factory(t) {\n  return new (t || BrowserModule)(ɵngcc0.ɵɵinject(BrowserModule, 12));\n};\n\nBrowserModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: BrowserModule\n});\nBrowserModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: BROWSER_MODULE_PROVIDERS,\n  imports: [CommonModule, ApplicationModule]\n});\n\nBrowserModule.ctorParameters = () => [{\n  type: BrowserModule,\n  decorators: [{\n    type: Optional\n  }, {\n    type: SkipSelf\n  }, {\n    type: Inject,\n    args: [BrowserModule]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserModule, [{\n    type: NgModule,\n    args: [{\n      providers: BROWSER_MODULE_PROVIDERS,\n      exports: [CommonModule, ApplicationModule]\n    }]\n  }], function () {\n    return [{\n      type: BrowserModule,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }, {\n        type: Inject,\n        args: [BrowserModule]\n      }]\n    }];\n  }, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BrowserModule, {\n    exports: function () {\n      return [CommonModule, ApplicationModule];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\n\n\nfunction createMeta() {\n  return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\n\n\nclass Meta {\n  constructor(_doc) {\n    this._doc = _doc;\n    this._dom = ɵgetDOM();\n  }\n  /**\n   * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * If an existing element is found, it is returned and is not modified in any way.\n   * @param tag The definition of a `<meta>` element to match or create.\n   * @param forceCreation True to create a new element without checking whether one already exists.\n   * @returns The existing element with the same attributes and values if found,\n   * the new element if no match is found, or `null` if the tag parameter is not defined.\n   */\n\n\n  addTag(tag, forceCreation = false) {\n    if (!tag) return null;\n    return this._getOrCreateElement(tag, forceCreation);\n  }\n  /**\n   * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n   * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n   * values in the provided tag definition, and verifies that all other attribute values are equal.\n   * @param tags An array of tag definitions to match or create.\n   * @param forceCreation True to create new elements without checking whether they already exist.\n   * @returns The matching elements if found, or the new elements.\n   */\n\n\n  addTags(tags, forceCreation = false) {\n    if (!tags) return [];\n    return tags.reduce((result, tag) => {\n      if (tag) {\n        result.push(this._getOrCreateElement(tag, forceCreation));\n      }\n\n      return result;\n    }, []);\n  }\n  /**\n   * Retrieves a `<meta>` tag element in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching element, if any.\n   */\n\n\n  getTag(attrSelector) {\n    if (!attrSelector) return null;\n    return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n  }\n  /**\n   * Retrieves a set of `<meta>` tag elements in the current HTML document.\n   * @param attrSelector The tag attribute and value to match against, in the format\n   * `\"tag_attribute='value string'\"`.\n   * @returns The matching elements, if any.\n   */\n\n\n  getTags(attrSelector) {\n    if (!attrSelector) return [];\n\n    const list\n    /*NodeList*/\n    = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n\n    return list ? [].slice.call(list) : [];\n  }\n  /**\n   * Modifies an existing `<meta>` tag element in the current HTML document.\n   * @param tag The tag description with which to replace the existing tag content.\n   * @param selector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n   * replacement tag.\n   * @return The modified element.\n   */\n\n\n  updateTag(tag, selector) {\n    if (!tag) return null;\n    selector = selector || this._parseSelector(tag);\n    const meta = this.getTag(selector);\n\n    if (meta) {\n      return this._setMetaElementAttributes(tag, meta);\n    }\n\n    return this._getOrCreateElement(tag, true);\n  }\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param attrSelector A tag attribute and value to match against, to identify\n   * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n   */\n\n\n  removeTag(attrSelector) {\n    this.removeTagElement(this.getTag(attrSelector));\n  }\n  /**\n   * Removes an existing `<meta>` tag element from the current HTML document.\n   * @param meta The tag definition to match against to identify an existing tag.\n   */\n\n\n  removeTagElement(meta) {\n    if (meta) {\n      this._dom.remove(meta);\n    }\n  }\n\n  _getOrCreateElement(meta, forceCreation = false) {\n    if (!forceCreation) {\n      const selector = this._parseSelector(meta);\n\n      const elem = this.getTag(selector); // It's allowed to have multiple elements with the same name so it's not enough to\n      // just check that element with the same name already present on the page. We also need to\n      // check if element has tag attributes\n\n      if (elem && this._containsAttributes(meta, elem)) return elem;\n    }\n\n    const element = this._dom.createElement('meta');\n\n    this._setMetaElementAttributes(meta, element);\n\n    const head = this._doc.getElementsByTagName('head')[0];\n\n    head.appendChild(element);\n    return element;\n  }\n\n  _setMetaElementAttributes(tag, el) {\n    Object.keys(tag).forEach(prop => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n    return el;\n  }\n\n  _parseSelector(tag) {\n    const attr = tag.name ? 'name' : 'property';\n    return `${attr}=\"${tag[attr]}\"`;\n  }\n\n  _containsAttributes(tag, elem) {\n    return Object.keys(tag).every(key => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n  }\n\n  _getMetaKeyMap(prop) {\n    return META_KEYS_MAP[prop] || prop;\n  }\n\n}\n\nMeta.ɵfac = function Meta_Factory(t) {\n  return new (t || Meta)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nMeta.ɵprov = ɵɵdefineInjectable({\n  factory: createMeta,\n  token: Meta,\n  providedIn: \"root\"\n});\n\nMeta.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Meta, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createMeta,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\n\n\nconst META_KEYS_MAP = {\n  httpEquiv: 'http-equiv'\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Factory to create Title service.\n */\n\nfunction createTitle() {\n  return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\n\n\nclass Title {\n  constructor(_doc) {\n    this._doc = _doc;\n  }\n  /**\n   * Get the title of the current HTML document.\n   */\n\n\n  getTitle() {\n    return this._doc.title;\n  }\n  /**\n   * Set the title of the current HTML document.\n   * @param newTitle\n   */\n\n\n  setTitle(newTitle) {\n    this._doc.title = newTitle || '';\n  }\n\n}\n\nTitle.ɵfac = function Title_Factory(t) {\n  return new (t || Title)(ɵngcc0.ɵɵinject(DOCUMENT));\n};\n\nTitle.ɵprov = ɵɵdefineInjectable({\n  factory: createTitle,\n  token: Title,\n  providedIn: \"root\"\n});\n\nTitle.ctorParameters = () => [{\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Title, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useFactory: createTitle,\n      deps: []\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst win = typeof window !== 'undefined' && window || {};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nclass ChangeDetectionPerfRecord {\n  constructor(msPerTick, numTicks) {\n    this.msPerTick = msPerTick;\n    this.numTicks = numTicks;\n  }\n\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\n\n\nclass AngularProfiler {\n  constructor(ref) {\n    this.appRef = ref.injector.get(ApplicationRef);\n  } // tslint:disable:no-console\n\n  /**\n   * Exercises change detection in a loop and then prints the average amount of\n   * time in milliseconds how long a single round of change detection takes for\n   * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n   * of 500 milliseconds.\n   *\n   * Optionally, a user may pass a `config` parameter containing a map of\n   * options. Supported options are:\n   *\n   * `record` (boolean) - causes the profiler to record a CPU profile while\n   * it exercises the change detector. Example:\n   *\n   * ```\n   * ng.profiler.timeChangeDetection({record: true})\n   * ```\n   */\n\n\n  timeChangeDetection(config) {\n    const record = config && config['record'];\n    const profileName = 'Change Detection'; // Profiler is not available in Android browsers without dev tools opened\n\n    const isProfilerAvailable = win.console.profile != null;\n\n    if (record && isProfilerAvailable) {\n      win.console.profile(profileName);\n    }\n\n    const start = ɵgetDOM().performanceNow();\n    let numTicks = 0;\n\n    while (numTicks < 5 || ɵgetDOM().performanceNow() - start < 500) {\n      this.appRef.tick();\n      numTicks++;\n    }\n\n    const end = ɵgetDOM().performanceNow();\n\n    if (record && isProfilerAvailable) {\n      win.console.profileEnd(profileName);\n    }\n\n    const msPerTick = (end - start) / numTicks;\n    win.console.log(`ran ${numTicks} change detection cycles`);\n    win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n    return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n  }\n\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\n\nfunction enableDebugTools(ref) {\n  exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n  return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\n\n\nfunction disableDebugTools() {\n  exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nfunction escapeHtml(text) {\n  const escapedText = {\n    '&': '&a;',\n    '\"': '&q;',\n    '\\'': '&s;',\n    '<': '&l;',\n    '>': '&g;'\n  };\n  return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\n\nfunction unescapeHtml(text) {\n  const unescapedText = {\n    '&a;': '&',\n    '&q;': '\"',\n    '&s;': '\\'',\n    '&l;': '<',\n    '&g;': '>'\n  };\n  return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\n\n\nfunction makeStateKey(key) {\n  return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\n\n\nclass TransferState {\n  constructor() {\n    this.store = {};\n    this.onSerializeCallbacks = {};\n  }\n  /** @internal */\n\n\n  static init(initState) {\n    const transferState = new TransferState();\n    transferState.store = initState;\n    return transferState;\n  }\n  /**\n   * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n   */\n\n\n  get(key, defaultValue) {\n    return this.store[key] !== undefined ? this.store[key] : defaultValue;\n  }\n  /**\n   * Set the value corresponding to a key.\n   */\n\n\n  set(key, value) {\n    this.store[key] = value;\n  }\n  /**\n   * Remove a key from the store.\n   */\n\n\n  remove(key) {\n    delete this.store[key];\n  }\n  /**\n   * Test whether a key exists in the store.\n   */\n\n\n  hasKey(key) {\n    return this.store.hasOwnProperty(key);\n  }\n  /**\n   * Register a callback to provide the value for a key when `toJson` is called.\n   */\n\n\n  onSerialize(key, callback) {\n    this.onSerializeCallbacks[key] = callback;\n  }\n  /**\n   * Serialize the current state of the store to JSON.\n   */\n\n\n  toJson() {\n    // Call the onSerialize callbacks and put those values into the store.\n    for (const key in this.onSerializeCallbacks) {\n      if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n        try {\n          this.store[key] = this.onSerializeCallbacks[key]();\n        } catch (e) {\n          console.warn('Exception in onSerialize callback: ', e);\n        }\n      }\n    }\n\n    return JSON.stringify(this.store);\n  }\n\n}\n\nTransferState.ɵfac = function TransferState_Factory(t) {\n  return new (t || TransferState)();\n};\n\nTransferState.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: TransferState,\n  factory: TransferState.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TransferState, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n\nfunction initTransferState(doc, appId) {\n  // Locate the script tag with the JSON data transferred from the server.\n  // The id of the script tag is set to the Angular appId + 'state'.\n  const script = doc.getElementById(appId + '-state');\n  let initialState = {};\n\n  if (script && script.textContent) {\n    try {\n      initialState = JSON.parse(unescapeHtml(script.textContent));\n    } catch (e) {\n      console.warn('Exception while restoring TransferState for app ' + appId, e);\n    }\n  }\n\n  return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\n\n\nclass BrowserTransferStateModule {}\n\nBrowserTransferStateModule.ɵfac = function BrowserTransferStateModule_Factory(t) {\n  return new (t || BrowserTransferStateModule)();\n};\n\nBrowserTransferStateModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: BrowserTransferStateModule\n});\nBrowserTransferStateModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [{\n    provide: TransferState,\n    useFactory: initTransferState,\n    deps: [DOCUMENT, APP_ID]\n  }]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserTransferStateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: TransferState,\n        useFactory: initTransferState,\n        deps: [DOCUMENT, APP_ID]\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\n\n\nclass By {\n  /**\n   * Match all nodes.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n   */\n  static all() {\n    return () => true;\n  }\n  /**\n   * Match elements by the given CSS selector.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n   */\n\n\n  static css(selector) {\n    return debugElement => {\n      return debugElement.nativeElement != null ? elementMatches(debugElement.nativeElement, selector) : false;\n    };\n  }\n  /**\n   * Match nodes that have the given directive present.\n   *\n   * @usageNotes\n   * ### Example\n   *\n   * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n   */\n\n\n  static directive(type) {\n    return debugNode => debugNode.providerTokens.indexOf(type) !== -1;\n  }\n\n}\n\nfunction elementMatches(n, selector) {\n  if (ɵgetDOM().isElementNode(n)) {\n    return n.matches && n.matches(selector) || n.msMatchesSelector && n.msMatchesSelector(selector) || n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n  }\n\n  return false;\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @publicApi\n */\n\n\nconst VERSION = new Version('11.0.9');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS__POST_R3__ as ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS, ELEMENT_PROBE_PROVIDERS__POST_R3__ as ɵELEMENT_PROBE_PROVIDERS__POST_R3__, HAMMER_PROVIDERS__POST_R3__ as ɵHAMMER_PROVIDERS__POST_R3__, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, errorHandler as ɵangular_packages_platform_browser_platform_browser_a, _document as ɵangular_packages_platform_browser_platform_browser_b, BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c, createMeta as ɵangular_packages_platform_browser_platform_browser_d, createTitle as ɵangular_packages_platform_browser_platform_browser_e, initTransferState as ɵangular_packages_platform_browser_platform_browser_f, EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g, HAMMER_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_h, HAMMER_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i, domSanitizerImplFactory as ɵangular_packages_platform_browser_platform_browser_j, appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_k, SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_l, _createNgProbeR2 as ɵangular_packages_platform_browser_platform_browser_m, ELEMENT_PROBE_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_n, GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_o, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };","map":{"version":3,"names":["ɵDomAdapter","ɵsetRootDomAdapter","ɵparseCookieValue","ɵgetDOM","DOCUMENT","ɵPLATFORM_BROWSER_ID","CommonModule","ɵngcc0","ɵglobal","InjectionToken","ApplicationInitStatus","APP_INITIALIZER","Injector","setTestabilityGetter","ApplicationRef","NgZone","ɵgetDebugNodeR2","NgProbeToken","Optional","Injectable","Inject","ViewEncapsulation","APP_ID","RendererStyleFlags2","ɵConsole","NgModule","ɵɵdefineInjectable","ɵɵinject","forwardRef","SecurityContext","ɵallowSanitizationBypassAndThrow","ɵunwrapSafeValue","ɵgetSanitizationBypassType","ɵ_sanitizeUrl","ɵ_sanitizeHtml","ɵbypassSanitizationTrustHtml","ɵbypassSanitizationTrustStyle","ɵbypassSanitizationTrustScript","ɵbypassSanitizationTrustUrl","ɵbypassSanitizationTrustResourceUrl","INJECTOR","ErrorHandler","ɵsetDocument","PLATFORM_ID","PLATFORM_INITIALIZER","Sanitizer","createPlatformFactory","platformCore","ɵINJECTOR_SCOPE","RendererFactory2","Testability","ApplicationModule","SkipSelf","Version","GenericBrowserDomAdapter","constructor","supportsDOMEvents","ɵ0","prototype","contains","node","compareDocumentPosition","undefined","nodeContains","BrowserDomAdapter","makeCurrent","getProperty","el","name","log","error","window","console","logGroup","group","logGroupEnd","groupEnd","onAndCancel","evt","listener","addEventListener","removeEventListener","dispatchEvent","remove","parentNode","removeChild","getValue","value","createElement","tagName","doc","getDefaultDocument","createHtmlDocument","document","implementation","createHTMLDocument","isElementNode","nodeType","Node","ELEMENT_NODE","isShadowRoot","DocumentFragment","getGlobalEventTarget","target","body","getHistory","history","getLocation","location","getBaseHref","href","getBaseElementHref","relativePath","resetBaseElement","baseElement","getUserAgent","navigator","userAgent","performanceNow","performance","now","Date","getTime","supportsCookies","getCookie","cookie","querySelector","getAttribute","urlParsingNode","url","setAttribute","pathname","charAt","TRANSITION_ID","appInitializerFactory","transitionId","injector","get","donePromise","then","dom","styles","Array","slice","apply","querySelectorAll","filter","forEach","SERVER_TRANSITION_PROVIDERS","provide","useFactory","deps","multi","BrowserGetTestability","init","addToWindow","registry","elem","findInAncestors","testability","findTestabilityInTree","Error","getAllTestabilities","getAllRootElements","whenAllStable","callback","testabilities","count","length","didWork","decrement","didWork_","whenStable","push","t","getTestability","host","parentElement","CAMEL_CASE_REGEXP","DASH_CASE_REGEXP","camelCaseToDashCase","input","replace","m","toLowerCase","dashCaseToCamelCase","toUpperCase","exportNgVar","COMPILED","ng","ɵ0$1","CORE_TOKENS","INSPECT_GLOBAL_NAME","CORE_TOKENS_GLOBAL_NAME","inspectNativeElementR2","element","_createNgProbeR2","coreTokens","Object","assign","_ngProbeTokensToMap","tokens","reduce","prev","token","ELEMENT_PROBE_PROVIDERS__POST_R3__","ELEMENT_PROBE_PROVIDERS__PRE_R3__","ELEMENT_PROBE_PROVIDERS","EVENT_MANAGER_PLUGINS","EventManager","plugins","_zone","_eventNameToPlugin","Map","p","manager","_plugins","reverse","eventName","handler","plugin","_findPluginFor","addGlobalEventListener","getZone","i","supports","set","ɵfac","EventManager_Factory","ɵprov","factory","ctorParameters","type","decorators","args","ngDevMode","ɵsetClassMetadata","EventManagerPlugin","_doc","SharedStylesHost","_stylesSet","Set","addStyles","additions","style","has","add","onStylesAdded","getAllStyles","from","SharedStylesHost_Factory","DomSharedStylesHost","_hostNodes","_styleNodes","head","_addStylesToHost","styleEl","textContent","appendChild","addHost","hostNode","removeHost","delete","ngOnDestroy","styleNode","DomSharedStylesHost_Factory","NAMESPACE_URIS","COMPONENT_REGEX","NG_DEV_MODE","COMPONENT_VARIABLE","HOST_ATTR","CONTENT_ATTR","shimContentAttribute","componentShortId","shimHostAttribute","flattenStyles","compId","isArray","decoratePreventDefault","eventHandler","event","allowDefaultBehavior","preventDefault","returnValue","hasLoggedNativeEncapsulationWarning","DomRendererFactory2","eventManager","sharedStylesHost","appId","rendererByCompId","defaultRenderer","DefaultDomRenderer2","createRenderer","encapsulation","Emulated","renderer","id","EmulatedEncapsulationDomRenderer2","applyToHost","ShadowDom","warn","ShadowDomRenderer","begin","end","DomRendererFactory2_Factory","String","data","create","destroy","namespace","createElementNS","createComment","createText","createTextNode","parent","newChild","insertBefore","refChild","oldChild","selectRootElement","selectorOrNode","preserveContent","nextSibling","namespaceUri","setAttributeNS","removeAttribute","removeAttributeNS","addClass","classList","removeClass","setStyle","flags","DashCase","Important","setProperty","removeStyle","removeProperty","checkNoSyntheticProp","setValue","nodeValue","listen","ɵ0$2","charCodeAt","AT_CHARCODE","nameKind","component","contentAttr","hostAttr","hostEl","shadowRoot","attachShadow","mode","nodeOrShadowRoot","DomEventsPlugin","DomEventsPlugin_Factory","EVENT_NAMES","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","events","overrides","buildHammer","mc","Hammer","options","enable","HammerGestureConfig_Factory","HammerGesturesPlugin","_config","loader","hasOwnProperty","isCustomEvent","zone","cancelRegistration","deregister","catch","runOutsideAngular","eventObj","runGuarded","on","off","indexOf","HammerGesturesPlugin_Factory","HAMMER_PROVIDERS__POST_R3__","HAMMER_PROVIDERS__PRE_R3__","useClass","HAMMER_PROVIDERS","HammerModule","HammerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","MODIFIER_KEYS","DOM_KEY_LOCATION_NUMPAD","_keyMap","_chromeNumKeyPadMap","ɵ0$3","altKey","ɵ1","ctrlKey","ɵ2","metaKey","ɵ3","shiftKey","MODIFIER_KEY_GETTERS","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","parts","split","domEventName","shift","key","_normalizeKey","pop","fullKey","modifierName","index","splice","result","getEventFullKey","getEventKey","modifierGetter","keyName","KeyEventsPlugin_Factory","keyIdentifier","startsWith","fromCharCode","parseInt","substring","DomSanitizer","DomSanitizer_Factory","DomSanitizerImpl","providedIn","useExisting","domSanitizerImplFactory","sanitize","ctx","NONE","HTML","STYLE","SCRIPT","URL","RESOURCE_URL","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","DomSanitizerImpl_Factory","initDomAdapter","errorHandler","_document","ɵ0$4","INTERNAL_BROWSER_PLATFORM_PROVIDERS","useValue","BROWSER_SANITIZATION_PROVIDERS__PRE_R3__","BROWSER_SANITIZATION_PROVIDERS__POST_R3__","BROWSER_SANITIZATION_PROVIDERS","platformBrowser","BROWSER_MODULE_PROVIDERS","BrowserModule","parentModule","withServerTransition","params","ngModule","BrowserModule_Factory","imports","exports","ngJitMode","ɵɵsetNgModuleScope","createMeta","Meta","_dom","addTag","tag","forceCreation","_getOrCreateElement","addTags","tags","getTag","attrSelector","getTags","list","call","updateTag","selector","_parseSelector","meta","_setMetaElementAttributes","removeTag","removeTagElement","_containsAttributes","getElementsByTagName","keys","prop","_getMetaKeyMap","attr","every","META_KEYS_MAP","Meta_Factory","httpEquiv","createTitle","Title","getTitle","title","setTitle","newTitle","Title_Factory","win","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularProfiler","ref","appRef","timeChangeDetection","config","record","profileName","isProfilerAvailable","profile","start","tick","profileEnd","toFixed","PROFILER_GLOBAL_NAME","enableDebugTools","disableDebugTools","escapeHtml","text","escapedText","s","unescapeHtml","unescapedText","makeStateKey","TransferState","store","onSerializeCallbacks","initState","transferState","defaultValue","hasKey","onSerialize","toJson","e","JSON","stringify","TransferState_Factory","initTransferState","script","getElementById","initialState","parse","BrowserTransferStateModule","BrowserTransferStateModule_Factory","By","all","css","debugElement","nativeElement","elementMatches","directive","debugNode","providerTokens","n","matches","msMatchesSelector","webkitMatchesSelector","VERSION","ɵBROWSER_SANITIZATION_PROVIDERS","ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__","ɵBrowserDomAdapter","ɵBrowserGetTestability","ɵDomEventsPlugin","ɵDomRendererFactory2","ɵDomSanitizerImpl","ɵDomSharedStylesHost","ɵELEMENT_PROBE_PROVIDERS","ɵELEMENT_PROBE_PROVIDERS__POST_R3__","ɵHAMMER_PROVIDERS__POST_R3__","ɵHammerGesturesPlugin","ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS","ɵKeyEventsPlugin","ɵNAMESPACE_URIS","ɵSharedStylesHost","ɵTRANSITION_ID","ɵangular_packages_platform_browser_platform_browser_a","ɵangular_packages_platform_browser_platform_browser_b","ɵangular_packages_platform_browser_platform_browser_c","ɵangular_packages_platform_browser_platform_browser_d","ɵangular_packages_platform_browser_platform_browser_e","ɵangular_packages_platform_browser_platform_browser_f","ɵangular_packages_platform_browser_platform_browser_g","ɵangular_packages_platform_browser_platform_browser_h","ɵangular_packages_platform_browser_platform_browser_i","ɵangular_packages_platform_browser_platform_browser_j","ɵangular_packages_platform_browser_platform_browser_k","ɵangular_packages_platform_browser_platform_browser_l","ɵangular_packages_platform_browser_platform_browser_m","ɵangular_packages_platform_browser_platform_browser_n","ɵangular_packages_platform_browser_platform_browser_o","ɵescapeHtml","ɵflattenStyles","ɵinitDomAdapter","ɵshimContentAttribute","ɵshimHostAttribute"],"sources":["/home/ytp-user-003/Documents/Backup/kohab/kohabbb/kohab-web-ui/node_modules/@angular/platform-browser/__ivy_ngcc__/fesm2015/platform-browser.js"],"sourcesContent":["/**\n * @license Angular v11.0.9\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { ɵDomAdapter, ɵsetRootDomAdapter, ɵparseCookieValue, ɵgetDOM, DOCUMENT, ɵPLATFORM_BROWSER_ID, CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nexport { ɵgetDOM } from '@angular/common';\nimport { ɵglobal, InjectionToken, ApplicationInitStatus, APP_INITIALIZER, Injector, setTestabilityGetter, ApplicationRef, NgZone, ɵgetDebugNodeR2, NgProbeToken, Optional, Injectable, Inject, ViewEncapsulation, APP_ID, RendererStyleFlags2, ɵConsole, NgModule, ɵɵdefineInjectable, ɵɵinject, forwardRef, SecurityContext, ɵallowSanitizationBypassAndThrow, ɵunwrapSafeValue, ɵgetSanitizationBypassType, ɵ_sanitizeUrl, ɵ_sanitizeHtml, ɵbypassSanitizationTrustHtml, ɵbypassSanitizationTrustStyle, ɵbypassSanitizationTrustScript, ɵbypassSanitizationTrustUrl, ɵbypassSanitizationTrustResourceUrl, INJECTOR, ErrorHandler, ɵsetDocument, PLATFORM_ID, PLATFORM_INITIALIZER, Sanitizer, createPlatformFactory, platformCore, ɵINJECTOR_SCOPE, RendererFactory2, Testability, ApplicationModule, SkipSelf, Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass GenericBrowserDomAdapter extends ɵDomAdapter {\n    constructor() {\n        super();\n    }\n    supportsDOMEvents() {\n        return true;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ɵ0 = () => {\n    if (ɵglobal['Node']) {\n        return ɵglobal['Node'].prototype.contains || function (node) {\n            return !!(this.compareDocumentPosition(node) & 16);\n        };\n    }\n    return undefined;\n};\nconst nodeContains = (ɵ0)();\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * @security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\n/* tslint:disable:requireParameterType no-console */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    static makeCurrent() {\n        ɵsetRootDomAdapter(new BrowserDomAdapter());\n    }\n    getProperty(el, name) {\n        return el[name];\n    }\n    log(error) {\n        if (window.console) {\n            window.console.log && window.console.log(error);\n        }\n    }\n    logGroup(error) {\n        if (window.console) {\n            window.console.group && window.console.group(error);\n        }\n    }\n    logGroupEnd() {\n        if (window.console) {\n            window.console.groupEnd && window.console.groupEnd();\n        }\n    }\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return () => {\n            el.removeEventListener(evt, listener, false);\n        };\n    }\n    dispatchEvent(el, evt) {\n        el.dispatchEvent(evt);\n    }\n    remove(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n        return node;\n    }\n    getValue(el) {\n        return el.value;\n    }\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    getDefaultDocument() {\n        return document;\n    }\n    isElementNode(node) {\n        return node.nodeType === Node.ELEMENT_NODE;\n    }\n    isShadowRoot(node) {\n        return node instanceof DocumentFragment;\n    }\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    getHistory() {\n        return window.history;\n    }\n    getLocation() {\n        return window.location;\n    }\n    getBaseHref(doc) {\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    resetBaseElement() {\n        baseElement = null;\n    }\n    getUserAgent() {\n        return window.navigator.userAgent;\n    }\n    performanceNow() {\n        // performance.now() is not available in all browsers, see\n        // https://caniuse.com/high-resolution-time\n        return window.performance && window.performance.now ? window.performance.now() :\n            new Date().getTime();\n    }\n    supportsCookies() {\n        return true;\n    }\n    getCookie(name) {\n        return ɵparseCookieValue(document.cookie, name);\n    }\n}\nlet baseElement = null;\nfunction getBaseElementHref() {\n    if (!baseElement) {\n        baseElement = document.querySelector('base');\n        if (!baseElement) {\n            return null;\n        }\n    }\n    return baseElement.getAttribute('href');\n}\n// based on urlUtils.js in AngularJS 1\nlet urlParsingNode;\nfunction relativePath(url) {\n    if (!urlParsingNode) {\n        urlParsingNode = document.createElement('a');\n    }\n    urlParsingNode.setAttribute('href', url);\n    return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n        '/' + urlParsingNode.pathname;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nconst TRANSITION_ID = new InjectionToken('TRANSITION_ID');\nfunction appInitializerFactory(transitionId, document, injector) {\n    return () => {\n        // Wait for all application initializers to be completed before removing the styles set by\n        // the server.\n        injector.get(ApplicationInitStatus).donePromise.then(() => {\n            const dom = ɵgetDOM();\n            const styles = Array.prototype.slice.apply(document.querySelectorAll(`style[ng-transition]`));\n            styles.filter(el => el.getAttribute('ng-transition') === transitionId)\n                .forEach(el => dom.remove(el));\n        });\n    };\n}\nconst SERVER_TRANSITION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: appInitializerFactory,\n        deps: [TRANSITION_ID, DOCUMENT, Injector],\n        multi: true\n    },\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass BrowserGetTestability {\n    static init() {\n        setTestabilityGetter(new BrowserGetTestability());\n    }\n    addToWindow(registry) {\n        ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        const whenAllStable = (callback /** TODO #9100 */) => {\n            const testabilities = ɵglobal['getAllAngularTestabilities']();\n            let count = testabilities.length;\n            let didWork = false;\n            const decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (ɵgetDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, elem.host, true);\n        }\n        return this.findTestabilityInTree(registry, elem.parentElement, true);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\nconst DASH_CASE_REGEXP = /-([a-z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, (...m) => m[1].toUpperCase());\n}\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param value The value to export.\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        const ng = ɵglobal['ng'] = ɵglobal['ng'] || {};\n        ng[name] = value;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ɵ0$1 = () => ({\n    'ApplicationRef': ApplicationRef,\n    'NgZone': NgZone,\n});\nconst CORE_TOKENS = (ɵ0$1)();\nconst INSPECT_GLOBAL_NAME = 'probe';\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n */\nfunction inspectNativeElementR2(element) {\n    return ɵgetDebugNodeR2(element);\n}\nfunction _createNgProbeR2(coreTokens) {\n    exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElementR2);\n    exportNgVar(CORE_TOKENS_GLOBAL_NAME, Object.assign(Object.assign({}, CORE_TOKENS), _ngProbeTokensToMap(coreTokens || [])));\n    return () => inspectNativeElementR2;\n}\nfunction _ngProbeTokensToMap(tokens) {\n    return tokens.reduce((prev, t) => (prev[t.name] = t.token, prev), {});\n}\n/**\n * In Ivy, we don't support NgProbe because we have our own set of testing utilities\n * with more robust functionality.\n *\n * We shouldn't bring in NgProbe because it prevents DebugNode and friends from\n * tree-shaking properly.\n */\nconst ELEMENT_PROBE_PROVIDERS__POST_R3__ = [];\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nconst ELEMENT_PROBE_PROVIDERS__PRE_R3__ = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: _createNgProbeR2,\n        deps: [\n            [NgProbeToken, new Optional()],\n        ],\n        multi: true,\n    },\n];\nconst ELEMENT_PROBE_PROVIDERS = ELEMENT_PROBE_PROVIDERS__PRE_R3__;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The injection token for the event-manager plug-in service.\n *\n * @publicApi\n */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n *\n * @publicApi\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(p => p.manager = this);\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns  A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param eventName The name of the event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns A callback function that can be used to remove the handler.\n     */\n    addGlobalEventListener(target, eventName, handler) {\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     */\n    getZone() {\n        return this._zone;\n    }\n    /** @internal */\n    _findPluginFor(eventName) {\n        const plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        const plugins = this._plugins;\n        for (let i = 0; i < plugins.length; i++) {\n            const plugin = plugins[i];\n            if (plugin.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin);\n                return plugin;\n            }\n        }\n        throw new Error(`No event manager plugin found for event ${eventName}`);\n    }\n}\nEventManager.ɵfac = function EventManager_Factory(t) { return new (t || EventManager)(ɵngcc0.ɵɵinject(EVENT_MANAGER_PLUGINS), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nEventManager.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: EventManager, factory: EventManager.ɵfac });\nEventManager.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Inject, args: [EVENT_MANAGER_PLUGINS,] }] },\n    { type: NgZone }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(EventManager, [{\n        type: Injectable\n    }], function () { return [{ type: Array, decorators: [{\n                type: Inject,\n                args: [EVENT_MANAGER_PLUGINS]\n            }] }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass EventManagerPlugin {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    addGlobalEventListener(element, eventName, handler) {\n        const target = ɵgetDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n        }\n        return this.addEventListener(target, eventName, handler);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass SharedStylesHost {\n    constructor() {\n        /** @internal */\n        this._stylesSet = new Set();\n    }\n    addStyles(styles) {\n        const additions = new Set();\n        styles.forEach(style => {\n            if (!this._stylesSet.has(style)) {\n                this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    }\n    onStylesAdded(additions) { }\n    getAllStyles() {\n        return Array.from(this._stylesSet);\n    }\n}\nSharedStylesHost.ɵfac = function SharedStylesHost_Factory(t) { return new (t || SharedStylesHost)(); };\nSharedStylesHost.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: SharedStylesHost, factory: SharedStylesHost.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SharedStylesHost, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\nclass DomSharedStylesHost extends SharedStylesHost {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n        this._hostNodes = new Set();\n        this._styleNodes = new Set();\n        this._hostNodes.add(_doc.head);\n    }\n    _addStylesToHost(styles, host) {\n        styles.forEach((style) => {\n            const styleEl = this._doc.createElement('style');\n            styleEl.textContent = style;\n            this._styleNodes.add(host.appendChild(styleEl));\n        });\n    }\n    addHost(hostNode) {\n        this._addStylesToHost(this._stylesSet, hostNode);\n        this._hostNodes.add(hostNode);\n    }\n    removeHost(hostNode) {\n        this._hostNodes.delete(hostNode);\n    }\n    onStylesAdded(additions) {\n        this._hostNodes.forEach(hostNode => this._addStylesToHost(additions, hostNode));\n    }\n    ngOnDestroy() {\n        this._styleNodes.forEach(styleNode => ɵgetDOM().remove(styleNode));\n    }\n}\nDomSharedStylesHost.ɵfac = function DomSharedStylesHost_Factory(t) { return new (t || DomSharedStylesHost)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nDomSharedStylesHost.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DomSharedStylesHost, factory: DomSharedStylesHost.ɵfac });\nDomSharedStylesHost.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSharedStylesHost, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\nconst COMPONENT_REGEX = /%COMP%/g;\nconst NG_DEV_MODE = typeof ngDevMode === 'undefined' || !!ngDevMode;\nconst COMPONENT_VARIABLE = '%COMP%';\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\nfunction flattenStyles(compId, styles, target) {\n    for (let i = 0; i < styles.length; i++) {\n        let style = styles[i];\n        if (Array.isArray(style)) {\n            flattenStyles(compId, style, target);\n        }\n        else {\n            style = style.replace(COMPONENT_REGEX, compId);\n            target.push(style);\n        }\n    }\n    return target;\n}\nfunction decoratePreventDefault(eventHandler) {\n    // `DebugNode.triggerEventHandler` needs to know if the listener was created with\n    // decoratePreventDefault or is a listener added outside the Angular context so it can handle the\n    // two differently. In the first case, the special '__ngUnwrap__' token is passed to the unwrap\n    // the listener (see below).\n    return (event) => {\n        // Ivy uses '__ngUnwrap__' as a special token that allows us to unwrap the function\n        // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`. The debug_node\n        // can inspect the listener toString contents for the existence of this special token. Because\n        // the token is a string literal, it is ensured to not be modified by compiled code.\n        if (event === '__ngUnwrap__') {\n            return eventHandler;\n        }\n        const allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n        return undefined;\n    };\n}\nlet hasLoggedNativeEncapsulationWarning = false;\nclass DomRendererFactory2 {\n    constructor(eventManager, sharedStylesHost, appId) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.appId = appId;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case ViewEncapsulation.Emulated: {\n                let renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer = new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type, this.appId);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                renderer.applyToHost(element);\n                return renderer;\n            }\n            case 1:\n            case ViewEncapsulation.ShadowDom:\n                // TODO(FW-2290): remove the `case 1:` fallback logic and the warning in v12.\n                if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n                    !hasLoggedNativeEncapsulationWarning && type.encapsulation === 1) {\n                    hasLoggedNativeEncapsulationWarning = true;\n                    console.warn('ViewEncapsulation.Native is no longer supported. Falling back to ViewEncapsulation.ShadowDom. The fallback will be removed in v12.');\n                }\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    const styles = flattenStyles(type.id, type.styles, []);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    }\n    begin() { }\n    end() { }\n}\nDomRendererFactory2.ɵfac = function DomRendererFactory2_Factory(t) { return new (t || DomRendererFactory2)(ɵngcc0.ɵɵinject(EventManager), ɵngcc0.ɵɵinject(DomSharedStylesHost), ɵngcc0.ɵɵinject(APP_ID)); };\nDomRendererFactory2.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DomRendererFactory2, factory: DomRendererFactory2.ɵfac });\nDomRendererFactory2.ctorParameters = () => [\n    { type: EventManager },\n    { type: DomSharedStylesHost },\n    { type: String, decorators: [{ type: Inject, args: [APP_ID,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomRendererFactory2, [{\n        type: Injectable\n    }], function () { return [{ type: EventManager }, { type: DomSharedStylesHost }, { type: String, decorators: [{\n                type: Inject,\n                args: [APP_ID]\n            }] }]; }, null); })();\nclass DefaultDomRenderer2 {\n    constructor(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n    }\n    destroy() { }\n    createElement(name, namespace) {\n        if (namespace) {\n            // In cases where Ivy (not ViewEngine) is giving us the actual namespace, the look up by key\n            // will result in undefined, so we just return the namespace here.\n            return document.createElementNS(NAMESPACE_URIS[namespace] || namespace, name);\n        }\n        return document.createElement(name);\n    }\n    createComment(value) {\n        return document.createComment(value);\n    }\n    createText(value) {\n        return document.createTextNode(value);\n    }\n    appendChild(parent, newChild) {\n        parent.appendChild(newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            parent.insertBefore(newChild, refChild);\n        }\n    }\n    removeChild(parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    }\n    selectRootElement(selectorOrNode, preserveContent) {\n        let el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        if (!preserveContent) {\n            el.textContent = '';\n        }\n        return el;\n    }\n    parentNode(node) {\n        return node.parentNode;\n    }\n    nextSibling(node) {\n        return node.nextSibling;\n    }\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + ':' + name;\n            // TODO(FW-811): Ivy may cause issues here because it's passing around\n            // full URIs for namespaces, therefore this lookup will fail.\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            // TODO(FW-811): Ivy may cause issues here because it's passing around\n            // full URIs for namespaces, therefore this lookup will fail.\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                // TODO(FW-811): Since ivy is passing around full URIs for namespaces\n                // this could result in properties like `http://www.w3.org/2000/svg:cx=\"123\"`,\n                // which is wrong.\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    addClass(el, name) {\n        el.classList.add(name);\n    }\n    removeClass(el, name) {\n        el.classList.remove(name);\n    }\n    setStyle(el, style, value, flags) {\n        if (flags & (RendererStyleFlags2.DashCase | RendererStyleFlags2.Important)) {\n            el.style.setProperty(style, value, flags & RendererStyleFlags2.Important ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    }\n    setProperty(el, name, value) {\n        NG_DEV_MODE && checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    setValue(node, value) {\n        node.nodeValue = value;\n    }\n    listen(target, event, callback) {\n        NG_DEV_MODE && checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback));\n        }\n        return this.eventManager.addEventListener(target, event, decoratePreventDefault(callback));\n    }\n}\nconst ɵ0$2 = () => '@'.charCodeAt(0);\nconst AT_CHARCODE = (ɵ0$2)();\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(`Found the synthetic ${nameKind} ${name}. Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.`);\n    }\n}\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, component, appId) {\n        super(eventManager);\n        this.component = component;\n        const styles = flattenStyles(appId + '-' + component.id, component.styles, []);\n        sharedStylesHost.addStyles(styles);\n        this.contentAttr = shimContentAttribute(appId + '-' + component.id);\n        this.hostAttr = shimHostAttribute(appId + '-' + component.id);\n    }\n    applyToHost(element) {\n        super.setAttribute(element, this.hostAttr, '');\n    }\n    createElement(parent, name) {\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    constructor(eventManager, sharedStylesHost, hostEl, component) {\n        super(eventManager);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.shadowRoot = hostEl.attachShadow({ mode: 'open' });\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        const styles = flattenStyles(component.id, component.styles, []);\n        for (let i = 0; i < styles.length; i++) {\n            const styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    nodeOrShadowRoot(node) {\n        return node === this.hostEl ? this.shadowRoot : node;\n    }\n    destroy() {\n        this.sharedStylesHost.removeHost(this.shadowRoot);\n    }\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    removeChild(parent, oldChild) {\n        return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n    }\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass DomEventsPlugin extends EventManagerPlugin {\n    constructor(doc) {\n        super(doc);\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    supports(eventName) {\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        element.addEventListener(eventName, handler, false);\n        return () => this.removeEventListener(element, eventName, handler);\n    }\n    removeEventListener(target, eventName, callback) {\n        return target.removeEventListener(eventName, callback);\n    }\n}\nDomEventsPlugin.ɵfac = function DomEventsPlugin_Factory(t) { return new (t || DomEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nDomEventsPlugin.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DomEventsPlugin, factory: DomEventsPlugin.ɵfac });\nDomEventsPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomEventsPlugin, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Supported HammerJS recognizer event names.\n */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n};\n/**\n * DI token for providing [HammerJS](https://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * @ngModule HammerModule\n * @publicApi\n */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/**\n * Injection token used to provide a {@link HammerLoader} to Angular.\n *\n * @publicApi\n */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n * for gesture recognition. Configures specific event recognition.\n * @publicApi\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](https://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](https://hammerjs.github.io/api/#hammermanager)\n     * and attaches it to a given HTML element.\n     * @param element The element that will recognize gestures.\n     * @returns A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        const mc = new Hammer(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n}\nHammerGestureConfig.ɵfac = function HammerGestureConfig_Factory(t) { return new (t || HammerGestureConfig)(); };\nHammerGestureConfig.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: HammerGestureConfig, factory: HammerGestureConfig.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGestureConfig, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/**\n * Event plugin that adds Hammer support to an application.\n *\n * @ngModule HammerModule\n */\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n    }\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!window.Hammer && !this.loader) {\n            this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                `loaded and no custom loader has been specified.`);\n            return false;\n        }\n        return true;\n    }\n    addEventListener(element, eventName, handler) {\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!window.Hammer && this.loader) {\n            // This `addEventListener` method returns a function to remove the added listener.\n            // Until Hammer is loaded, the returned function needs to *cancel* the registration rather\n            // than remove anything.\n            let cancelRegistration = false;\n            let deregister = () => {\n                cancelRegistration = true;\n            };\n            this.loader()\n                .then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!window.Hammer) {\n                    this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(() => {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                    `Hammer.JS loader failed.`);\n                deregister = () => { };\n            });\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => {\n                deregister();\n            };\n        }\n        return zone.runOutsideAngular(() => {\n            // Creating the manager bind events, must be done outside of angular\n            const mc = this._config.buildHammer(element);\n            const callback = function (eventObj) {\n                zone.runGuarded(function () {\n                    handler(eventObj);\n                });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    isCustomEvent(eventName) {\n        return this._config.events.indexOf(eventName) > -1;\n    }\n}\nHammerGesturesPlugin.ɵfac = function HammerGesturesPlugin_Factory(t) { return new (t || HammerGesturesPlugin)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(HAMMER_GESTURE_CONFIG), ɵngcc0.ɵɵinject(ɵngcc0.ɵConsole), ɵngcc0.ɵɵinject(HAMMER_LOADER, 8)); };\nHammerGesturesPlugin.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: HammerGesturesPlugin, factory: HammerGesturesPlugin.ɵfac });\nHammerGesturesPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: HammerGestureConfig, decorators: [{ type: Inject, args: [HAMMER_GESTURE_CONFIG,] }] },\n    { type: ɵConsole },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HAMMER_LOADER,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerGesturesPlugin, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: HammerGestureConfig, decorators: [{\n                type: Inject,\n                args: [HAMMER_GESTURE_CONFIG]\n            }] }, { type: ɵngcc0.ɵConsole }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [HAMMER_LOADER]\n            }] }]; }, null); })();\n/**\n * In Ivy, support for Hammer gestures is optional, so applications must\n * import the `HammerModule` at root to turn on support. This means that\n * Hammer-specific code can be tree-shaken away if not needed.\n */\nconst HAMMER_PROVIDERS__POST_R3__ = [];\n/**\n * In View Engine, support for Hammer gestures is built-in by default.\n */\nconst HAMMER_PROVIDERS__PRE_R3__ = [\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n    },\n    { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n];\nconst HAMMER_PROVIDERS = HAMMER_PROVIDERS__PRE_R3__;\n/**\n * Adds support for HammerJS.\n *\n * Import this module at the root of your application so that Angular can work with\n * HammerJS to detect gesture events.\n *\n * Note that applications still need to include the HammerJS script itself. This module\n * simply sets up the coordination layer between HammerJS and Angular's EventManager.\n *\n * @publicApi\n */\nclass HammerModule {\n}\nHammerModule.ɵfac = function HammerModule_Factory(t) { return new (t || HammerModule)(); };\nHammerModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: HammerModule });\nHammerModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: HAMMER_PROVIDERS__PRE_R3__ });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HammerModule, [{\n        type: NgModule,\n        args: [{ providers: HAMMER_PROVIDERS__PRE_R3__ }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines supported modifiers for key events.\n */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nconst DOM_KEY_LOCATION_NUMPAD = 3;\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nconst _keyMap = {\n    // The following values are here for cross-browser compatibility and to match the W3C standard\n    // cf https://www.w3.org/TR/DOM-Level-3-Events-key/\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nconst _chromeNumKeyPadMap = {\n    'A': '1',\n    'B': '2',\n    'C': '3',\n    'D': '4',\n    'E': '5',\n    'F': '6',\n    'G': '7',\n    'H': '8',\n    'I': '9',\n    'J': '*',\n    'K': '+',\n    'M': '-',\n    'N': '.',\n    'O': '/',\n    '\\x60': '0',\n    '\\x90': 'NumLock'\n};\nconst ɵ0$3 = (event) => event.altKey, ɵ1 = (event) => event.ctrlKey, ɵ2 = (event) => event.metaKey, ɵ3 = (event) => event.shiftKey;\n/**\n * Retrieves modifiers from key-event objects.\n */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': ɵ0$3,\n    'control': ɵ1,\n    'meta': ɵ2,\n    'shift': ɵ3\n};\n/**\n * @publicApi\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param doc The document in which key events will be detected.\n     */\n    constructor(doc) {\n        super(doc);\n    }\n    /**\n     * Reports whether a named key event is supported.\n     * @param eventName The event name to query.\n     * @return True if the named key event is supported.\n     */\n    supports(eventName) {\n        return KeyEventsPlugin.parseEventName(eventName) != null;\n    }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param element The HTML element to receive event notifications.\n     * @param eventName The name of the key event to listen for.\n     * @param handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @returns The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        const parsedEvent = KeyEventsPlugin.parseEventName(eventName);\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return ɵgetDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    static parseEventName(eventName) {\n        const parts = eventName.toLowerCase().split('.');\n        const domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        const key = KeyEventsPlugin._normalizeKey(parts.pop());\n        let fullKey = '';\n        MODIFIER_KEYS.forEach(modifierName => {\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        // NOTE: Please don't rewrite this as so, as it will break JSCompiler property renaming.\n        //       The code must remain in the `result['domEventName']` form.\n        // return {domEventName, fullKey};\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    static getEventFullKey(event) {\n        let fullKey = '';\n        let key = getEventKey(event);\n        key = key.toLowerCase();\n        if (key === ' ') {\n            key = 'space'; // for readability\n        }\n        else if (key === '.') {\n            key = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            if (modifierName != key) {\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    fullKey += modifierName + '.';\n                }\n            }\n        });\n        fullKey += key;\n        return fullKey;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param fullKey The event name that combines all simultaneous keystrokes.\n     * @param handler The function that responds to the key event.\n     * @param zone The zone in which the event occurred.\n     * @returns A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event /** TODO #9100 */) => {\n            if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /** @internal */\n    static _normalizeKey(keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    }\n}\nKeyEventsPlugin.ɵfac = function KeyEventsPlugin_Factory(t) { return new (t || KeyEventsPlugin)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nKeyEventsPlugin.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: KeyEventsPlugin, factory: KeyEventsPlugin.ɵfac });\nKeyEventsPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KeyEventsPlugin, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nfunction getEventKey(event) {\n    let key = event.key;\n    if (key == null) {\n        key = event.keyIdentifier;\n        // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n        // Safari cf\n        // https://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n        if (key == null) {\n            return 'Unidentified';\n        }\n        if (key.startsWith('U+')) {\n            key = String.fromCharCode(parseInt(key.substring(2), 16));\n            if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n                // There is a bug in Chrome for numeric keypad keys:\n                // https://code.google.com/p/chromium/issues/detail?id=155654\n                // 1, 2, 3 ... are reported as A, B, C ...\n                key = _chromeNumKeyPadMap[key];\n            }\n        }\n    }\n    return _keyMap[key] || key;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * @security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](https://g.co/ng/security).\n *\n * @publicApi\n */\nclass DomSanitizer {\n}\nDomSanitizer.ɵfac = function DomSanitizer_Factory(t) { return new (t || DomSanitizer)(); };\nDomSanitizer.ɵprov = ɵɵdefineInjectable({ factory: function DomSanitizer_Factory() { return ɵɵinject(DomSanitizerImpl); }, token: DomSanitizer, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useExisting: forwardRef(() => DomSanitizerImpl) }]\n    }], null, null); })();\nfunction domSanitizerImplFactory(injector) {\n    return new DomSanitizerImpl(injector.get(DOCUMENT));\n}\nclass DomSanitizerImpl extends DomSanitizer {\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return value;\n            case SecurityContext.HTML:\n                if (ɵallowSanitizationBypassAndThrow(value, \"HTML\" /* Html */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeHtml(this._doc, String(value));\n            case SecurityContext.STYLE:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Style\" /* Style */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return value;\n            case SecurityContext.SCRIPT:\n                if (ɵallowSanitizationBypassAndThrow(value, \"Script\" /* Script */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a script context');\n            case SecurityContext.URL:\n                const type = ɵgetSanitizationBypassType(value);\n                if (ɵallowSanitizationBypassAndThrow(value, \"URL\" /* Url */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                return ɵ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (ɵallowSanitizationBypassAndThrow(value, \"ResourceURL\" /* ResourceUrl */)) {\n                    return ɵunwrapSafeValue(value);\n                }\n                throw new Error('unsafe value used in a resource URL context (see https://g.co/ng/security#xss)');\n            default:\n                throw new Error(`Unexpected SecurityContext ${ctx} (see https://g.co/ng/security#xss)`);\n        }\n    }\n    bypassSecurityTrustHtml(value) {\n        return ɵbypassSanitizationTrustHtml(value);\n    }\n    bypassSecurityTrustStyle(value) {\n        return ɵbypassSanitizationTrustStyle(value);\n    }\n    bypassSecurityTrustScript(value) {\n        return ɵbypassSanitizationTrustScript(value);\n    }\n    bypassSecurityTrustUrl(value) {\n        return ɵbypassSanitizationTrustUrl(value);\n    }\n    bypassSecurityTrustResourceUrl(value) {\n        return ɵbypassSanitizationTrustResourceUrl(value);\n    }\n}\nDomSanitizerImpl.ɵfac = function DomSanitizerImpl_Factory(t) { return new (t || DomSanitizerImpl)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nDomSanitizerImpl.ɵprov = ɵɵdefineInjectable({ factory: function DomSanitizerImpl_Factory() { return domSanitizerImplFactory(ɵɵinject(INJECTOR)); }, token: DomSanitizerImpl, providedIn: \"root\" });\nDomSanitizerImpl.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DomSanitizerImpl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: domSanitizerImplFactory, deps: [Injector] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n}\nfunction errorHandler() {\n    return new ErrorHandler();\n}\nfunction _document() {\n    // Tell ivy about the global document\n    ɵsetDocument(document);\n    return document;\n}\nconst ɵ0$4 = ɵPLATFORM_BROWSER_ID;\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵ0$4 },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: DOCUMENT, useFactory: _document, deps: [] },\n];\nconst BROWSER_SANITIZATION_PROVIDERS__PRE_R3__ = [\n    { provide: Sanitizer, useExisting: DomSanitizer },\n    { provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT] },\n];\nconst BROWSER_SANITIZATION_PROVIDERS__POST_R3__ = [];\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](https://g.co/ng/security).\n * @publicApi\n */\nconst BROWSER_SANITIZATION_PROVIDERS = BROWSER_SANITIZATION_PROVIDERS__PRE_R3__;\n/**\n * A factory function that returns a `PlatformRef` instance associated with browser service\n * providers.\n *\n * @publicApi\n */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\nconst BROWSER_MODULE_PROVIDERS = [\n    BROWSER_SANITIZATION_PROVIDERS,\n    { provide: ɵINJECTOR_SCOPE, useValue: 'root' },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT] },\n    HAMMER_PROVIDERS,\n    {\n        provide: DomRendererFactory2,\n        useClass: DomRendererFactory2,\n        deps: [EventManager, DomSharedStylesHost, APP_ID]\n    },\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n    { provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT] },\n    { provide: Testability, useClass: Testability, deps: [NgZone] },\n    { provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone] },\n    ELEMENT_PROBE_PROVIDERS,\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by default in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n * @publicApi\n */\nclass BrowserModule {\n    constructor(parentModule) {\n        if (parentModule) {\n            throw new Error(`BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * @param params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @returns The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n                { provide: TRANSITION_ID, useExisting: APP_ID },\n                SERVER_TRANSITION_PROVIDERS,\n            ],\n        };\n    }\n}\nBrowserModule.ɵfac = function BrowserModule_Factory(t) { return new (t || BrowserModule)(ɵngcc0.ɵɵinject(BrowserModule, 12)); };\nBrowserModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BrowserModule });\nBrowserModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: BROWSER_MODULE_PROVIDERS, imports: [CommonModule, ApplicationModule] });\nBrowserModule.ctorParameters = () => [\n    { type: BrowserModule, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [BrowserModule,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserModule, [{\n        type: NgModule,\n        args: [{ providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule] }]\n    }], function () { return [{ type: BrowserModule, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [BrowserModule]\n            }] }]; }, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BrowserModule, { exports: function () { return [CommonModule, ApplicationModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create a `Meta` service instance for the current DOM document.\n */\nfunction createMeta() {\n    return new Meta(ɵɵinject(DOCUMENT));\n}\n/**\n * A service for managing HTML `<meta>` tags.\n *\n * Properties of the `MetaDefinition` object match the attributes of the\n * HTML `<meta>` tag. These tags define document metadata that is important for\n * things like configuring a Content Security Policy, defining browser compatibility\n * and security settings, setting HTTP Headers, defining rich content for social sharing,\n * and Search Engine Optimization (SEO).\n *\n * To identify specific `<meta>` tags in a document, use an attribute selection\n * string in the format `\"tag_attribute='value string'\"`.\n * For example, an `attrSelector` value of `\"name='description'\"` matches a tag\n * whose `name` attribute has the value `\"description\"`.\n * Selectors are used with the `querySelector()` Document method,\n * in the format `meta[{attrSelector}]`.\n *\n * @see [HTML meta tag](https://developer.mozilla.org/docs/Web/HTML/Element/meta)\n * @see [Document.querySelector()](https://developer.mozilla.org/docs/Web/API/Document/querySelector)\n *\n *\n * @publicApi\n */\nclass Meta {\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = ɵgetDOM();\n    }\n    /**\n     * Retrieves or creates a specific `<meta>` tag element in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * If an existing element is found, it is returned and is not modified in any way.\n     * @param tag The definition of a `<meta>` element to match or create.\n     * @param forceCreation True to create a new element without checking whether one already exists.\n     * @returns The existing element with the same attributes and values if found,\n     * the new element if no match is found, or `null` if the tag parameter is not defined.\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * Retrieves or creates a set of `<meta>` tag elements in the current HTML document.\n     * In searching for an existing tag, Angular attempts to match the `name` or `property` attribute\n     * values in the provided tag definition, and verifies that all other attribute values are equal.\n     * @param tags An array of tag definitions to match or create.\n     * @param forceCreation True to create new elements without checking whether they already exist.\n     * @returns The matching elements if found, or the new elements.\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * Retrieves a `<meta>` tag element in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching element, if any.\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._doc.querySelector(`meta[${attrSelector}]`) || null;\n    }\n    /**\n     * Retrieves a set of `<meta>` tag elements in the current HTML document.\n     * @param attrSelector The tag attribute and value to match against, in the format\n     * `\"tag_attribute='value string'\"`.\n     * @returns The matching elements, if any.\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        const list /*NodeList*/ = this._doc.querySelectorAll(`meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * Modifies an existing `<meta>` tag element in the current HTML document.\n     * @param tag The tag description with which to replace the existing tag content.\n     * @param selector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     * If not supplied, matches a tag with the same `name` or `property` attribute value as the\n     * replacement tag.\n     * @return The modified element.\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        const meta = this.getTag(selector);\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param attrSelector A tag attribute and value to match against, to identify\n     * an existing tag. A string in the format `\"tag_attribute=`value string`\"`.\n     */\n    removeTag(attrSelector) {\n        this.removeTagElement(this.getTag(attrSelector));\n    }\n    /**\n     * Removes an existing `<meta>` tag element from the current HTML document.\n     * @param meta The tag definition to match against to identify an existing tag.\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            const selector = this._parseSelector(meta);\n            const elem = this.getTag(selector);\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            if (elem && this._containsAttributes(meta, elem))\n                return elem;\n        }\n        const element = this._dom.createElement('meta');\n        this._setMetaElementAttributes(meta, element);\n        const head = this._doc.getElementsByTagName('head')[0];\n        head.appendChild(element);\n        return element;\n    }\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => el.setAttribute(this._getMetaKeyMap(prop), tag[prop]));\n        return el;\n    }\n    _parseSelector(tag) {\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => elem.getAttribute(this._getMetaKeyMap(key)) === tag[key]);\n    }\n    _getMetaKeyMap(prop) {\n        return META_KEYS_MAP[prop] || prop;\n    }\n}\nMeta.ɵfac = function Meta_Factory(t) { return new (t || Meta)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nMeta.ɵprov = ɵɵdefineInjectable({ factory: createMeta, token: Meta, providedIn: \"root\" });\nMeta.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Meta, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: createMeta, deps: [] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Mapping for MetaDefinition properties with their correct meta attribute names\n */\nconst META_KEYS_MAP = {\n    httpEquiv: 'http-equiv'\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory to create Title service.\n */\nfunction createTitle() {\n    return new Title(ɵɵinject(DOCUMENT));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * @publicApi\n */\nclass Title {\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    getTitle() {\n        return this._doc.title;\n    }\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    setTitle(newTitle) {\n        this._doc.title = newTitle || '';\n    }\n}\nTitle.ɵfac = function Title_Factory(t) { return new (t || Title)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nTitle.ɵprov = ɵɵdefineInjectable({ factory: createTitle, token: Title, providedIn: \"root\" });\nTitle.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Title, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: createTitle, deps: [] }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst win = typeof window !== 'undefined' && window || {};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ChangeDetectionPerfRecord {\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    constructor(ref) {\n        this.appRef = ref.injector.get(ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    timeChangeDetection(config) {\n        const record = config && config['record'];\n        const profileName = 'Change Detection';\n        // Profiler is not available in Android browsers without dev tools opened\n        const isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        const start = ɵgetDOM().performanceNow();\n        let numTicks = 0;\n        while (numTicks < 5 || (ɵgetDOM().performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        const end = ɵgetDOM().performanceNow();\n        if (record && isProfilerAvailable) {\n            win.console.profileEnd(profileName);\n        }\n        const msPerTick = (end - start) / numTicks;\n        win.console.log(`ran ${numTicks} change detection cycles`);\n        win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * @publicApi\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * @publicApi\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction escapeHtml(text) {\n    const escapedText = {\n        '&': '&a;',\n        '\"': '&q;',\n        '\\'': '&s;',\n        '<': '&l;',\n        '>': '&g;',\n    };\n    return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\nfunction unescapeHtml(text) {\n    const unescapedText = {\n        '&a;': '&',\n        '&q;': '\"',\n        '&s;': '\\'',\n        '&l;': '<',\n        '&g;': '>',\n    };\n    return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * @publicApi\n */\nfunction makeStateKey(key) {\n    return key;\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialized in a\n * non-lossy manner.\n *\n * @publicApi\n */\nclass TransferState {\n    constructor() {\n        this.store = {};\n        this.onSerializeCallbacks = {};\n    }\n    /** @internal */\n    static init(initState) {\n        const transferState = new TransferState();\n        transferState.store = initState;\n        return transferState;\n    }\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    get(key, defaultValue) {\n        return this.store[key] !== undefined ? this.store[key] : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     */\n    set(key, value) {\n        this.store[key] = value;\n    }\n    /**\n     * Remove a key from the store.\n     */\n    remove(key) {\n        delete this.store[key];\n    }\n    /**\n     * Test whether a key exists in the store.\n     */\n    hasKey(key) {\n        return this.store.hasOwnProperty(key);\n    }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n    onSerialize(key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n    toJson() {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (const key in this.onSerializeCallbacks) {\n            if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n                try {\n                    this.store[key] = this.onSerializeCallbacks[key]();\n                }\n                catch (e) {\n                    console.warn('Exception in onSerialize callback: ', e);\n                }\n            }\n        }\n        return JSON.stringify(this.store);\n    }\n}\nTransferState.ɵfac = function TransferState_Factory(t) { return new (t || TransferState)(); };\nTransferState.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: TransferState, factory: TransferState.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TransferState, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\nfunction initTransferState(doc, appId) {\n    // Locate the script tag with the JSON data transferred from the server.\n    // The id of the script tag is set to the Angular appId + 'state'.\n    const script = doc.getElementById(appId + '-state');\n    let initialState = {};\n    if (script && script.textContent) {\n        try {\n            initialState = JSON.parse(unescapeHtml(script.textContent));\n        }\n        catch (e) {\n            console.warn('Exception while restoring TransferState for app ' + appId, e);\n        }\n    }\n    return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * @publicApi\n */\nclass BrowserTransferStateModule {\n}\nBrowserTransferStateModule.ɵfac = function BrowserTransferStateModule_Factory(t) { return new (t || BrowserTransferStateModule)(); };\nBrowserTransferStateModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: BrowserTransferStateModule });\nBrowserTransferStateModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID] }] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BrowserTransferStateModule, [{\n        type: NgModule,\n        args: [{\n                providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT, APP_ID] }]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Predicates for use with {@link DebugElement}'s query functions.\n *\n * @publicApi\n */\nclass By {\n    /**\n     * Match all nodes.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     */\n    static all() {\n        return () => true;\n    }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null ?\n                elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    }\n    /**\n     * Match nodes that have the given directive present.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     */\n    static directive(type) {\n        return (debugNode) => debugNode.providerTokens.indexOf(type) !== -1;\n    }\n}\nfunction elementMatches(n, selector) {\n    if (ɵgetDOM().isElementNode(n)) {\n        return n.matches && n.matches(selector) ||\n            n.msMatchesSelector && n.msMatchesSelector(selector) ||\n            n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('11.0.9');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserModule, BrowserTransferStateModule, By, DomSanitizer, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, HammerModule, Meta, Title, TransferState, VERSION, disableDebugTools, enableDebugTools, makeStateKey, platformBrowser, BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS__POST_R3__ as ɵBROWSER_SANITIZATION_PROVIDERS__POST_R3__, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserGetTestability as ɵBrowserGetTestability, DomEventsPlugin as ɵDomEventsPlugin, DomRendererFactory2 as ɵDomRendererFactory2, DomSanitizerImpl as ɵDomSanitizerImpl, DomSharedStylesHost as ɵDomSharedStylesHost, ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS, ELEMENT_PROBE_PROVIDERS__POST_R3__ as ɵELEMENT_PROBE_PROVIDERS__POST_R3__, HAMMER_PROVIDERS__POST_R3__ as ɵHAMMER_PROVIDERS__POST_R3__, HammerGesturesPlugin as ɵHammerGesturesPlugin, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, KeyEventsPlugin as ɵKeyEventsPlugin, NAMESPACE_URIS as ɵNAMESPACE_URIS, SharedStylesHost as ɵSharedStylesHost, TRANSITION_ID as ɵTRANSITION_ID, errorHandler as ɵangular_packages_platform_browser_platform_browser_a, _document as ɵangular_packages_platform_browser_platform_browser_b, BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c, createMeta as ɵangular_packages_platform_browser_platform_browser_d, createTitle as ɵangular_packages_platform_browser_platform_browser_e, initTransferState as ɵangular_packages_platform_browser_platform_browser_f, EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g, HAMMER_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_h, HAMMER_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i, domSanitizerImplFactory as ɵangular_packages_platform_browser_platform_browser_j, appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_k, SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_l, _createNgProbeR2 as ɵangular_packages_platform_browser_platform_browser_m, ELEMENT_PROBE_PROVIDERS__PRE_R3__ as ɵangular_packages_platform_browser_platform_browser_n, GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_o, escapeHtml as ɵescapeHtml, flattenStyles as ɵflattenStyles, initDomAdapter as ɵinitDomAdapter, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}